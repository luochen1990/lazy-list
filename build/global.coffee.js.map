{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","global.coffee.js","global.coffee","lazy.coffee"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length",1,"global","k","lazy","v","this","self","window","./lazy",2,"module","this_module","slice","all","any","best","brk","cartProd","concat","cons","drop","dropWhile","enumerate","filter","foldl","foreach","generate","iterator","last","lazylist","list","map","naturals","nil","permutation_gen","primes","random_gen","range","ranged_random_gen","ref","repeat","reverse","scanl","streak","take","takeWhile","zip","zipWith","xs","iter","toString","it","next","value","done","args","arguments","stop","start","step","x","p","Infinity","arr","Array","keys","Object","init","status","hash","Math","sin","floor","opts","seed","random","next_permutation","m","ref1","ls","json","c","ok","finished","j","prevx","got","buf","push","shift","copy","xss","current_index","len1","iters","results","apply","apply_vector","inc_vector","limits","len_minus_1","vec","space","len","get_value","inc","better","all_not","callback","fruit","defineProperties","break","writable","configurable","enumerable"],"mappings":"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","file":"global.coffee.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",null,"lazy = require('./lazy')\nglobal[k] = v for k, v of lazy\n","this_module = () ->\n\n\t# LazyList definition: nil, lazylist, iterator,\n\n\tlazylist = (xs) -> # construct a lazylist from a function.\n\t\txs.iter = -> xs()\n\t\txs.toString = -> \"LazyList\"\n\t\treturn xs\n\n\tnil = lazylist -> nil # xs is empty <==> xs is nil or xs() is nil or xs()() is nil... <==> last xs is nil\n\tnil.toString = -> 'nil'\n\n\titerator = (it) -> # construct an iterator(which is a function with status) from a function.\n\t\tit.next = ->\n\t\t\tr = it()\n\t\t\t{value: r, done: r == nil}\n\t\tit.toString = -> \"Iterator\"\n\t\treturn it\n\n\t# lazylist constants: naturals, range, primes,\n\n\tnaturals =\n\t\tlazylist ->\n\t\t\ti = -1\n\t\t\titerator ->\n\t\t\t\t++i\n\n\trange = (args...) ->\n\t\tif args.length == 0\n\t\t\tnaturals\n\t\telse if args.length == 1\n\t\t\tlazylist ->\n\t\t\t\t[stop] = args\n\t\t\t\ti = -1\n\t\t\t\titerator ->\n\t\t\t\t\tif ++i < stop then i else nil\n\t\telse if args.length == 2\n\t\t\tlazylist ->\n\t\t\t\t[start, stop] = args\n\t\t\t\tif start < stop\n\t\t\t\t\ti = start - 1\n\t\t\t\t\titerator ->\n\t\t\t\t\t\tif ++i < stop then i else nil\n\t\t\t\telse\n\t\t\t\t\ti = start + 1\n\t\t\t\t\titerator ->\n\t\t\t\t\t\tif --i > stop then i else nil\n\t\telse\n\t\t\tlazylist ->\n\t\t\t\t[start, stop, step] = args\n\t\t\t\tthrow 'ERR IN range(): YOU ARE CREATING AN UNLIMITTED RANGE' if stop != start and (stop - start) * step < 0\n\t\t\t\ti = start - step\n\t\t\t\tif start < stop\n\t\t\t\t\titerator ->\n\t\t\t\t\t\tif (i += step) < stop then i else nil\n\t\t\t\telse\n\t\t\t\t\titerator ->\n\t\t\t\t\t\tif (i += step) > stop then i else nil\n\n\tprimes = lazylist -> do\n\t\tfilter((x) -> all((p) -> x % p != 0) takeWhile((p) -> p * p <= x) range(2, Infinity)) range(2, Infinity)\n\n\t# lazylist producers: lazy, enumerate, generate, random_gen, ranged_random_gen, permutation_gen,\n\n\tlazy = (arr) -> #make a lazylist from array or function\n\t\tif typeof arr is 'function'\n\t\t\tlazylist arr\n\t\telse #maybe Array or String\n\t\t\tlazylist ->\n\t\t\t\ti = -1\n\t\t\t\titerator ->\n\t\t\t\t\ti += 1\n\t\t\t\t\tif i < arr.length\n\t\t\t\t\t\tarr[i]\n\t\t\t\t\telse\n\t\t\t\t\t\tnil\n\n\tenumerate = (it) -> # iterator with index(with key for object)\n\t\tif it.iter? or it instanceof Array\n\t\t\tzip(naturals, it)\n\t\telse\n\t\t\tlazylist ->\n\t\t\t\tkeys = Object.keys(it)\n\t\t\t\ti = -1\n\t\t\t\titerator ->\n\t\t\t\t\tif ++i < keys.length then [(k = keys[i]), it[k]] else nil\n\n\trepeat = (it) -> # repeat it\n\t\tlazylist ->\n\t\t\titerator ->\n\t\t\t\tit\n\n\tgenerate = (init, next) -> #function next should not change it's argument\n\t\tlazylist ->\n\t\t\tstatus = init\n\t\t\titerator ->\n\t\t\t\tlast = status\n\t\t\t\tstatus = next status\n\t\t\t\treturn last\n\n\trandom_gen = do ->\n\t\thash = (x) ->\n\t\t\tx = Math.sin(x) * 1e4\n\t\t\tx - Math.floor(x)\n\t\t(opts) ->\n\t\t\tseed = opts?.seed ? Math.random()\n\t\t\tgenerate seed, hash\n\n\tranged_random_gen = (range, opts) ->\n\t\tseed = opts?.seed ? Math.random()\n\t\tmap((x) -> Math.floor(x * range)) random_gen(seed: seed)\n\n\tpermutation_gen = do ->\n\t\tnext_permutation = (x) ->\n\t\t\tx = x[...]\n\t\t\tl = x.length - 1\n\t\t\t--l while l >= 1 and x[l] <= x[l - 1]\n\n\t\t\tif (l != 0)\n\t\t\t\tm = x.length - 1\n\t\t\t\t--m while m > l - 1 and x[m] <= x[l - 1]\n\t\t\t\t[x[m], x[l - 1]] = [x[l - 1], x[m]]\n\n\t\t\tr = x.length - 1\n\t\t\twhile(l < r)\n\t\t\t\t[x[l], x[r]] = [x[r], x[l]]\n\t\t\t\t++l\n\t\t\t\t--r\n\t\t\treturn x\n\n\t\t(arr) ->\n\t\t\tif arr.length == 0 then nil else\n\t\t\t\tconcat [arr[...]], takeWhile((ls) -> json(ls) != json(arr)) drop(1) generate arr, next_permutation\n\n\t# lazylist decorators: take, takeWhile, drop, dropWhile, cons, map, filter, scanl, streak, reverse,\n\n\ttake = (n) ->\n\t\t(xs) ->\n\t\t\tlazylist ->\n\t\t\t\titer = (if xs.iter? then xs else lazy(xs)).iter()\n\t\t\t\tc = -1\n\t\t\t\titerator ->\n\t\t\t\t\tif ++c < n then iter() else nil\n\n\ttakeWhile = (ok) ->\n\t\t(xs) ->\n\t\t\tlazylist ->\n\t\t\t\titer = (if xs.iter? then xs else lazy(xs)).iter()\n\t\t\t\titerator ->\n\t\t\t\t\tif (x = iter()) isnt nil and ok(x) then x else nil\n\n\tdrop = (n) ->\n\t\t(xs) ->\n\t\t\tlazylist ->\n\t\t\t\titer = (if xs.iter? then xs else lazy(xs)).iter()\n\t\t\t\tfinished = false\n\t\t\t\t(finished or= (iter() is nil); break if finished) for i in [0...n]\n\t\t\t\tif finished then (-> nil) else iter\n\n\tdropWhile = (ok) ->\n\t\t(xs) ->\n\t\t\tlazylist ->\n\t\t\t\titer = (if xs.iter? then xs else lazy(xs)).iter()\n\t\t\t\tnull while ok(x = iter()) and x isnt nil\n\t\t\t\titerator ->\n\t\t\t\t\t[prevx, x] = [x, iter()]\n\t\t\t\t\treturn prevx\n\n\tcons = (x) ->\n\t\t(xs) ->\n\t\t\tlazylist ->\n\t\t\t\titer = null\n\t\t\t\titerator ->\n\t\t\t\t\tif iter is null\n\t\t\t\t\t\titer = (if xs.iter? then xs else lazy(xs)).iter()\n\t\t\t\t\t\treturn x\n\t\t\t\t\telse\n\t\t\t\t\t\treturn iter()\n\n\tmap = (f) ->\n\t\t(xs) ->\n\t\t\tlazylist ->\n\t\t\t\titer = (if xs.iter? then xs else lazy(xs)).iter()\n\t\t\t\titerator ->\n\t\t\t\t\tif (x = iter()) isnt nil then f(x) else nil\n\n\tfilter = (ok) ->\n\t\t(xs) ->\n\t\t\tlazylist ->\n\t\t\t\titer = (if xs.iter? then xs else lazy(xs)).iter()\n\t\t\t\titerator ->\n\t\t\t\t\tnull while not ok(x = iter()) and x isnt nil\n\t\t\t\t\treturn x\n\n\tscanl = (f, r) ->\n\t\t(xs) ->\n\t\t\tlazylist ->\n\t\t\t\titer = (if xs.iter? then xs else lazy(xs)).iter()\n\t\t\t\titerator ->\n\t\t\t\t\tgot = r\n\t\t\t\t\tr = if (x = iter()) isnt nil then f(r, x) else nil\n\t\t\t\t\treturn got\n\n\tstreak = (n) ->\n\t\t(xs) ->\n\t\t\tlazylist ->\n\t\t\t\titer = (if xs.iter? then xs else lazy(xs)).iter()\n\t\t\t\tbuf = []\n\t\t\t\titerator ->\n\t\t\t\t\treturn nil if (x = iter()) is nil\n\t\t\t\t\tbuf.push(x)\n\t\t\t\t\tbuf.shift(1) if buf.length > n\n\t\t\t\t\treturn buf[...]\n\n\treverse = (xs) ->\n\t\tarr = if xs.iter? then list xs else copy xs\n\t\treturn lazy arr.reverse()\n\n\t# lazylist combiners: concat, zip, zipWith, cartProd,\n\n\tconcat = (xss...) ->\n\t\tlazylist ->\n\t\t\titer = (if xss[0].iter? then xss[0] else lazy(xss[0])).iter()\n\t\t\tcurrent_index = 0\n\t\t\titerator ->\n\t\t\t\tif (x = iter()) isnt nil\n\t\t\t\t\treturn x\n\t\t\t\telse if (++current_index < xss.length)\n\t\t\t\t\titer = (if xss[current_index].iter? then xss[current_index] else lazy(xss[current_index])).iter()\n\t\t\t\t\treturn iter()\n\t\t\t\telse\n\t\t\t\t\treturn nil\n\n\t{zip, zipWith} = do ->\n\t\tfinished = (arr) ->\n\t\t\tfor x in arr\n\t\t\t\treturn true if x is nil\n\t\t\treturn false\n\n\t\tzip = (xss...) ->\n\t\t\tlazylist ->\n\t\t\t\titers = ((if xs.iter? then xs else lazy(xs)).iter() for xs in xss)\n\t\t\t\titerator ->\n\t\t\t\t\tnext = (iter() for iter in iters)\n\t\t\t\t\tif finished(next)\n\t\t\t\t\t\treturn nil\n\t\t\t\t\telse\n\t\t\t\t\t\treturn next\n\n\t\tzipWith = (f) -> (xss...) ->\n\t\t\tlazylist ->\n\t\t\t\titers = ((if xs.iter? then xs else lazy(xs)).iter() for xs in xss)\n\t\t\t\titerator ->\n\t\t\t\t\tnext = (iter() for iter in iters)\n\t\t\t\t\tif finished(next)\n\t\t\t\t\t\treturn nil\n\t\t\t\t\telse\n\t\t\t\t\t\treturn f(next...)\n\n\t\treturn {zip, zipWith}\n\n\tcartProd = do -> # cartesian product\n\t\tinc_vector = (limits) ->\n\t\t\tlen_minus_1 = limits.length - 1\n\t\t\t(vec) ->\n\t\t\t\ti = len_minus_1\n\t\t\t\tvec[i--] = 0 until ++vec[i] < limits[i] or i <= 0\n\t\t\t\treturn vec\n\n\t\tapply_vector = (space) ->\n\t\t\tlen = space.length\n\t\t\t(vec) ->\n\t\t\t\t(space[i][vec[i]] for i in [0...len])\n\n\t\t(xss...) ->\n\t\t\tlazylist ->\n\t\t\t\txss = (list(xs) for xs in xss)\n\t\t\t\tlimits = (xss[i].length for i in [0...xss.length])\n\t\t\t\t(return nil if len is 0) for len in limits\n\t\t\t\tinc = inc_vector(limits)\n\t\t\t\tget_value = apply_vector(xss)\n\t\t\t\tv = (0 for i in [0...xss.length])\n\t\t\t\titerator ->\n\t\t\t\t\tif v[0] < limits[0] then (r = get_value v; inc v; r) else nil\n\n\t# lazylist consumers: list, last, length, foldl, best, all, any, foreach,\n\n\tlist = (xs) -> #force list elements of the lazylist to get an array\n\t\tif xs.iter?\n\t\t\tit = xs.iter()\n\t\t\t(x while (x = it()) isnt nil)\n\t\telse if xs instanceof Array\n\t\t\txs\n\t\telse\n\t\t\tthrow Error 'list(xs): xs is neither LazyList nor Array'\n\n\tlast = (xs) -> #returns nil if xs is empty\n\t\tif not xs.iter? then xs[xs.length - 1] ? nil else\n\t\t\titer = (if xs.iter? then xs else lazy(xs)).iter()\n\t\t\tr = nil\n\t\t\tr = x while (x = iter()) isnt nil\n\t\t\treturn r\n\n\tlength = (xs) ->\n\t\tif not xs.iter? then xs.length else\n\t\t\titer = (if xs.iter? then xs else lazy(xs)).iter()\n\t\t\tr = 0\n\t\t\t++r while (x = iter()) isnt nil\n\t\t\treturn r\n\n\tfoldl = (f, r) ->\n\t\t(xs) ->\n\t\t\titer = (if xs.iter? then xs else lazy(xs)).iter()\n\t\t\tr = f(r, x) while (x = iter()) isnt nil\n\t\t\treturn r\n\n\tbest = (better) ->\n\t\t(xs) ->\n\t\t\titer = (if xs.iter? then xs else lazy(xs)).iter()\n\t\t\treturn null if (r = iter()) is nil\n\t\t\twhile (it = iter()) isnt nil\n\t\t\t\tr = if better(it, r) then it else r\n\t\t\treturn r\n\n\tall = (f) ->\n\t\tf = ((x) -> x is f) if typeof(f) isnt 'function'\n\t\t(xs) ->\n\t\t\titer = (if xs.iter? then xs else lazy(xs)).iter()\n\t\t\twhile (x = iter()) isnt nil\n\t\t\t\treturn false if not f(x)\n\t\t\treturn true\n\n\tany = (f) ->\n\t\tall_not = all (x) -> not f(x)\n\t\t(xs) -> not (all_not xs)\n\n\tbrk = -> brk\n\tbrk.toString = -> 'foreach.break'\n\n\tforeach = (xs, callback, fruit) ->\n\t\titer = (if xs.iter? then xs else lazy(xs)).iter()\n\t\twhile (x = iter()) isnt nil\n\t\t\tbreak if callback(x, fruit) is brk\n\t\tfruit\n\n\tObject.defineProperties foreach,\n\t\tbreak:\n\t\t\twritable: false\n\t\t\tconfigurable: false\n\t\t\tenumerable: false\n\t\t\tvalue: brk\n\n\treturn {\n\t\t# lazylist definition\n\t\tnil, lazylist, iterator,\n\n\t\t# lazylist constants\n\t\tnaturals, range, primes,\n\n\t\t# lazylist producers\n\t\tlazy, enumerate, repeat, generate, random_gen, ranged_random_gen, permutation_gen,\n\n\t\t# lazylist decorators\n\t\tcons, map, filter, take, takeWhile, drop, dropWhile, scanl, streak, reverse,\n\n\t\t# lazylist combiners\n\t\tconcat, zip, zipWith, cartProd,\n\n\t\t# lazylist consumers\n\t\tlist, last, length, foldl, best, all, any, foreach,\n\t}\n\nmodule.exports = this_module()\n\n"],"sourceRoot":"/source/"}