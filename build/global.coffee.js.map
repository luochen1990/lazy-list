{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","global.coffee.js","global.coffee","lazy.coffee"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length",1,"global","k","lazy","v","this","self","window","./lazy",2,"module","this_module","slice","arg","Symbol","all","any","best","brk","cartProd","concat","cons","drop","dropWhile","enumerate","filter","foldl","foreach","generate","iterator","last","lazylist","list","map","naturals","nil","permutation_gen","primes","random_gen","range","ranged_random_gen","ref","repeat","reverse","scanl","streak","take","takeWhile","zip","zipWith","toString","it","next","value","done","args","arguments","stop","start","step","x","p","Infinity","arr","Array","keys","Object","init","status","hash","Math","sin","floor","opts","seed","random","next_permutation","m","ref1","ls","json","xs","c","iter","ok","finished","j","prevx","got","buf","push","shift","copy","xss","current_index","len1","iters","results","apply","apply_vector","inc_vector","limits","len_minus_1","vec","space","len","get_value","inc","results1","better","all_not","callback","fruit","defineProperties","break","writable","configurable","enumerable"],"mappings":"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","file":"global.coffee.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",null,"lazy = require('./lazy')\nglobal[k] = v for k, v of lazy\n","this_module = ({Symbol}) ->\n\n\t# LazyList definition: nil, lazylist, iterator,\n\n\tlazylist = (f) -> # construct a lazylist from a function.\n\t\tf[Symbol.iterator] = -> f()\n\t\tf.toString = -> \"LazyList\"\n\t\treturn f\n\n\tnil = lazylist -> nil # xs is empty <==> xs is nil or xs() is nil or xs()() is nil... <==> last xs is nil\n\tnil.toString = -> 'nil'\n\n\titerator = (it) -> # construct an iterator(which is a function with status) from a function.\n\t\tit.next = ->\n\t\t\tr = it()\n\t\t\t{value: r, done: r == nil}\n\t\tit.toString = -> \"Iterator\"\n\t\treturn it\n\n\t# lazylist constants: naturals, range, primes,\n\n\tnaturals =\n\t\tlazylist ->\n\t\t\ti = -1\n\t\t\titerator ->\n\t\t\t\t++i\n\n\trange = (args...) ->\n\t\tif args.length == 0\n\t\t\tnaturals\n\t\telse if args.length == 1\n\t\t\tlazylist ->\n\t\t\t\t[stop] = args\n\t\t\t\ti = -1\n\t\t\t\titerator ->\n\t\t\t\t\tif ++i < stop then i else nil\n\t\telse if args.length == 2\n\t\t\tlazylist ->\n\t\t\t\t[start, stop] = args\n\t\t\t\tif start < stop\n\t\t\t\t\ti = start - 1\n\t\t\t\t\titerator ->\n\t\t\t\t\t\tif ++i < stop then i else nil\n\t\t\t\telse\n\t\t\t\t\ti = start + 1\n\t\t\t\t\titerator ->\n\t\t\t\t\t\tif --i > stop then i else nil\n\t\telse\n\t\t\tlazylist ->\n\t\t\t\t[start, stop, step] = args\n\t\t\t\tthrow 'ERR IN range(): YOU ARE CREATING AN UNLIMITTED RANGE' if stop != start and (stop - start) * step < 0\n\t\t\t\ti = start - step\n\t\t\t\tif start < stop\n\t\t\t\t\titerator ->\n\t\t\t\t\t\tif (i += step) < stop then i else nil\n\t\t\t\telse\n\t\t\t\t\titerator ->\n\t\t\t\t\t\tif (i += step) > stop then i else nil\n\n\tprimes = lazylist -> do\n\t\tfilter((x) -> all((p) -> x % p != 0) takeWhile((p) -> p * p <= x) range(2, Infinity)) range(2, Infinity)\n\n\t# lazylist producers: lazy, enumerate, generate, random_gen, ranged_random_gen, permutation_gen,\n\n\tlazy = (arr) -> #make a lazylist from array or function\n\t\tif typeof arr is 'function'\n\t\t\tlazylist arr\n\t\telse if arr[Symbol.iterator]?\n\t\t\tlazylist ->\n\t\t\t\tit = arr[Symbol.iterator]()\n\t\t\t\titerator ->\n\t\t\t\t\tr = it.next()\n\t\t\t\t\tif r.done then nil else r.value\n\t\telse #maybe Array or String\n\t\t\tlazylist ->\n\t\t\t\ti = -1\n\t\t\t\titerator ->\n\t\t\t\t\ti += 1\n\t\t\t\t\tif i < arr.length\n\t\t\t\t\t\tarr[i]\n\t\t\t\t\telse\n\t\t\t\t\t\tnil\n\n\tenumerate = (it) -> # iterator with index(with key for object)\n\t\tif it[Symbol.iterator]? or it instanceof Array\n\t\t\tzip(naturals, it)\n\t\telse\n\t\t\tlazylist ->\n\t\t\t\tkeys = Object.keys(it)\n\t\t\t\ti = -1\n\t\t\t\titerator ->\n\t\t\t\t\tif ++i < keys.length then [(k = keys[i]), it[k]] else nil\n\n\trepeat = (x) -> # repeat x\n\t\tlazylist ->\n\t\t\titerator ->\n\t\t\t\tx\n\n\tgenerate = (init, next) -> #function next should not change it's argument\n\t\tlazylist ->\n\t\t\tstatus = init\n\t\t\titerator ->\n\t\t\t\tlast = status\n\t\t\t\tstatus = next status\n\t\t\t\treturn last\n\n\trandom_gen = do ->\n\t\thash = (x) ->\n\t\t\tx = Math.sin(x) * 1e4\n\t\t\tx - Math.floor(x)\n\t\t(opts) ->\n\t\t\tseed = hash(opts?.seed ? Math.random())\n\t\t\tgenerate seed, hash\n\n\tranged_random_gen = (range, opts) ->\n\t\tseed = opts?.seed ? Math.random()\n\t\tmap((x) -> Math.floor(x * range)) random_gen(seed: seed)\n\n\tpermutation_gen = do ->\n\t\tnext_permutation = (x) ->\n\t\t\tx = x[...]\n\t\t\tl = x.length - 1\n\t\t\t--l while l >= 1 and x[l] <= x[l - 1]\n\n\t\t\tif (l != 0)\n\t\t\t\tm = x.length - 1\n\t\t\t\t--m while m > l - 1 and x[m] <= x[l - 1]\n\t\t\t\t[x[m], x[l - 1]] = [x[l - 1], x[m]]\n\n\t\t\tr = x.length - 1\n\t\t\twhile(l < r)\n\t\t\t\t[x[l], x[r]] = [x[r], x[l]]\n\t\t\t\t++l\n\t\t\t\t--r\n\t\t\treturn x\n\n\t\t(arr) ->\n\t\t\tif arr.length == 0 then nil else\n\t\t\t\tconcat [arr[...]], takeWhile((ls) -> json(ls) != json(arr)) drop(1) generate arr, next_permutation\n\n\t# lazylist decorators: take, takeWhile, drop, dropWhile, cons, map, filter, scanl, streak, reverse,\n\n\ttake = (n) ->\n\t\t(xs) ->\n\t\t\tlazylist ->\n\t\t\t\titer = (if typeof xs is 'function' then xs else lazy(xs))[Symbol.iterator]()\n\t\t\t\tc = -1\n\t\t\t\titerator ->\n\t\t\t\t\tif ++c < n then iter() else nil\n\n\ttakeWhile = (ok) ->\n\t\t(xs) ->\n\t\t\tlazylist ->\n\t\t\t\titer = (if typeof xs is 'function' then xs else lazy(xs))[Symbol.iterator]()\n\t\t\t\titerator ->\n\t\t\t\t\tif (x = iter()) isnt nil and ok(x) then x else nil\n\n\tdrop = (n) ->\n\t\t(xs) ->\n\t\t\tlazylist ->\n\t\t\t\titer = (if typeof xs is 'function' then xs else lazy(xs))[Symbol.iterator]()\n\t\t\t\tfinished = false\n\t\t\t\t(finished or= (iter() is nil); break if finished) for i in [0...n]\n\t\t\t\tif finished then (-> nil) else iter\n\n\tdropWhile = (ok) ->\n\t\t(xs) ->\n\t\t\tlazylist ->\n\t\t\t\titer = (if typeof xs is 'function' then xs else lazy(xs))[Symbol.iterator]()\n\t\t\t\tnull while ok(x = iter()) and x isnt nil\n\t\t\t\titerator ->\n\t\t\t\t\t[prevx, x] = [x, iter()]\n\t\t\t\t\treturn prevx\n\n\tcons = (x) ->\n\t\t(xs) ->\n\t\t\tlazylist ->\n\t\t\t\titer = null\n\t\t\t\titerator ->\n\t\t\t\t\tif iter is null\n\t\t\t\t\t\titer = (if typeof xs is 'function' then xs else lazy(xs))[Symbol.iterator]()\n\t\t\t\t\t\treturn x\n\t\t\t\t\telse\n\t\t\t\t\t\treturn iter()\n\n\tmap = (f) ->\n\t\t(xs) ->\n\t\t\tlazylist ->\n\t\t\t\titer = (if typeof xs is 'function' then xs else lazy(xs))[Symbol.iterator]()\n\t\t\t\titerator ->\n\t\t\t\t\tif (x = iter()) isnt nil then f(x) else nil\n\n\tfilter = (ok) ->\n\t\t(xs) ->\n\t\t\tlazylist ->\n\t\t\t\titer = (if typeof xs is 'function' then xs else lazy(xs))[Symbol.iterator]()\n\t\t\t\titerator ->\n\t\t\t\t\tnull while not ok(x = iter()) and x isnt nil\n\t\t\t\t\treturn x\n\n\tscanl = (f, r) ->\n\t\t(xs) ->\n\t\t\tlazylist ->\n\t\t\t\titer = (if typeof xs is 'function' then xs else lazy(xs))[Symbol.iterator]()\n\t\t\t\titerator ->\n\t\t\t\t\tgot = r\n\t\t\t\t\tr = if (x = iter()) isnt nil then f(r, x) else nil\n\t\t\t\t\treturn got\n\n\tstreak = (n) ->\n\t\t(xs) ->\n\t\t\tlazylist ->\n\t\t\t\titer = (if typeof xs is 'function' then xs else lazy(xs))[Symbol.iterator]()\n\t\t\t\tbuf = []\n\t\t\t\titerator ->\n\t\t\t\t\treturn nil if (x = iter()) is nil\n\t\t\t\t\tbuf.push(x)\n\t\t\t\t\tbuf.shift(1) if buf.length > n\n\t\t\t\t\treturn buf[...]\n\n\treverse = (xs) ->\n\t\tarr = if typeof xs is 'function' then list xs else copy xs\n\t\treturn lazy arr.reverse()\n\n\t# lazylist combiners: concat, zip, zipWith, cartProd,\n\n\tconcat = (xss...) ->\n\t\tlazylist ->\n\t\t\titer = (if xss[0][Symbol.iterator]? then xss[0] else lazy(xss[0]))[Symbol.iterator]()\n\t\t\tcurrent_index = 0\n\t\t\titerator ->\n\t\t\t\tif (x = iter()) isnt nil\n\t\t\t\t\treturn x\n\t\t\t\telse if (++current_index < xss.length)\n\t\t\t\t\titer = (if xss[current_index][Symbol.iterator]? then xss[current_index] else lazy(xss[current_index]))[Symbol.iterator]()\n\t\t\t\t\treturn iter()\n\t\t\t\telse\n\t\t\t\t\treturn nil\n\n\t{zip, zipWith} = do ->\n\t\tfinished = (arr) ->\n\t\t\tfor x in arr\n\t\t\t\treturn true if x is nil\n\t\t\treturn false\n\n\t\tzip = (xss...) ->\n\t\t\tlazylist ->\n\t\t\t\titers = ((if typeof xs is 'function' then xs else lazy(xs))[Symbol.iterator]() for xs in xss)\n\t\t\t\titerator ->\n\t\t\t\t\tnext = (iter() for iter in iters)\n\t\t\t\t\tif finished(next)\n\t\t\t\t\t\treturn nil\n\t\t\t\t\telse\n\t\t\t\t\t\treturn next\n\n\t\tzipWith = (f) -> (xss...) ->\n\t\t\tlazylist ->\n\t\t\t\titers = ((if typeof xs is 'function' then xs else lazy(xs))[Symbol.iterator]() for xs in xss)\n\t\t\t\titerator ->\n\t\t\t\t\tnext = (iter() for iter in iters)\n\t\t\t\t\tif finished(next)\n\t\t\t\t\t\treturn nil\n\t\t\t\t\telse\n\t\t\t\t\t\treturn f(next...)\n\n\t\treturn {zip, zipWith}\n\n\tcartProd = do -> # cartesian product\n\t\tinc_vector = (limits) ->\n\t\t\tlen_minus_1 = limits.length - 1\n\t\t\t(vec) ->\n\t\t\t\ti = len_minus_1\n\t\t\t\tvec[i--] = 0 until ++vec[i] < limits[i] or i <= 0\n\t\t\t\treturn vec\n\n\t\tapply_vector = (space) ->\n\t\t\tlen = space.length\n\t\t\t(vec) ->\n\t\t\t\t(space[i][vec[i]] for i in [0...len])\n\n\t\t(xss...) ->\n\t\t\tlazylist ->\n\t\t\t\txss = (list(xs) for xs in xss)\n\t\t\t\tlimits = (xss[i].length for i in [0...xss.length])\n\t\t\t\t(return nil if len is 0) for len in limits\n\t\t\t\tinc = inc_vector(limits)\n\t\t\t\tget_value = apply_vector(xss)\n\t\t\t\tv = (0 for i in [0...xss.length])\n\t\t\t\titerator ->\n\t\t\t\t\tif v[0] < limits[0] then (r = get_value v; inc v; r) else nil\n\n\t# lazylist consumers: list, last, length, foldl, best, all, any, foreach,\n\n\tlist = (xs) -> #force list elements of the lazylist to get an array\n\t\tif typeof xs is 'number'\n\t\t\tn = xs\n\t\t\t(xs) -> list take(n) xs\n\t\telse if typeof xs is 'function'\n\t\t\tit = xs[Symbol.iterator]()\n\t\t\t(x while (x = it()) isnt nil)\n\t\telse if xs[Symbol.iterator]?\n\t\t\tit = lazy(xs)[Symbol.iterator]()\n\t\t\t(x while (x = it()) isnt nil)\n\t\telse if xs instanceof Array\n\t\t\txs\n\t\telse\n\t\t\tthrow Error 'list(xs): xs is neither LazyList nor Array'\n\n\tlast = (xs) -> #returns nil if xs is empty\n\t\tif not xs[Symbol.iterator]? then xs[xs.length - 1] ? nil else\n\t\t\titer = (if typeof xs is 'function' then xs else lazy(xs))[Symbol.iterator]()\n\t\t\tr = nil\n\t\t\tr = x while (x = iter()) isnt nil\n\t\t\treturn r\n\n\tlength = (xs) ->\n\t\tif not xs[Symbol.iterator]? then xs.length else\n\t\t\titer = (if typeof xs is 'function' then xs else lazy(xs))[Symbol.iterator]()\n\t\t\tr = 0\n\t\t\t++r while (x = iter()) isnt nil\n\t\t\treturn r\n\n\tfoldl = (f, init) ->\n\t\t(xs) ->\n\t\t\tr = init\n\t\t\titer = (if typeof xs is 'function' then xs else lazy(xs))[Symbol.iterator]()\n\t\t\tr = f(r, x) while (x = iter()) isnt nil\n\t\t\treturn r\n\n\tbest = (better) ->\n\t\t(xs) ->\n\t\t\titer = (if typeof xs is 'function' then xs else lazy(xs))[Symbol.iterator]()\n\t\t\treturn null if (r = iter()) is nil\n\t\t\twhile (it = iter()) isnt nil\n\t\t\t\tr = if better(it, r) then it else r\n\t\t\treturn r\n\n\tall = (f) ->\n\t\tf = ((x) -> x is f) if typeof(f) isnt 'function'\n\t\t(xs) ->\n\t\t\titer = (if typeof xs is 'function' then xs else lazy(xs))[Symbol.iterator]()\n\t\t\twhile (x = iter()) isnt nil\n\t\t\t\treturn false if not f(x)\n\t\t\treturn true\n\n\tany = (f) ->\n\t\tall_not = all (x) -> not f(x)\n\t\t(xs) -> not (all_not xs)\n\n\tbrk = -> brk\n\tbrk.toString = -> 'foreach.break'\n\n\tforeach = (xs, callback, fruit) ->\n\t\titer = (if typeof xs is 'function' then xs else lazy(xs))[Symbol.iterator]()\n\t\twhile (x = iter()) isnt nil\n\t\t\tbreak if callback(x, fruit) is brk\n\t\tfruit\n\n\tObject.defineProperties foreach,\n\t\tbreak:\n\t\t\twritable: false\n\t\t\tconfigurable: false\n\t\t\tenumerable: false\n\t\t\tvalue: brk\n\n\treturn {\n\t\t# lazylist definition\n\t\tnil, lazylist, iterator, Symbol,\n\n\t\t# lazylist constants\n\t\tnaturals, range, primes,\n\n\t\t# lazylist producers\n\t\tlazy, enumerate, repeat, generate, random_gen, ranged_random_gen, permutation_gen,\n\n\t\t# lazylist decorators\n\t\tcons, map, filter, take, takeWhile, drop, dropWhile, scanl, streak, reverse,\n\n\t\t# lazylist combiners\n\t\tconcat, zip, zipWith, cartProd,\n\n\t\t# lazylist consumers\n\t\tlist, last, length, foldl, best, all, any, foreach,\n\t}\n\nmodule.exports = this_module\n\tSymbol: Symbol ? {iterator: 'iter'}\n"],"sourceRoot":"/source/"}