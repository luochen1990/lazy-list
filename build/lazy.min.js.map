{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","lazy.coffee","lazy.min.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length",1,"module","this_module","slice","arg","Iterator","LazyList","Symbol","all","any","best","brk","cartProd","concat","cons","drop","dropWhile","enumerate","filter","foldl","foreach","iterate","join","last","lazy","list","map","naturals","nil","permutation_gen","primes","random_gen","range","ranged_random_gen","ref","repeat","reverse","scanl","streak","take","takeWhile","zip","zipWith","iterator","toString","it","next","value","done","args","arguments","stop","start","step","x","p","Infinity","arr","Array","keys","Object","k","init","status","hash","Math","sin","floor","opts","seed","random","next_permutation","m","ref1","ls","json","xs","c","iter","ok","finished","j","prevx","ws","xs_unused","got","buf","push","shift","copy","xss","xs_iter","len1","iters","results","apply","apply_vector","inc_vector","limits","len_minus_1","vec","space","len","get_value","inc","v","results1","better","all_not","callback","fruit","defineProperties","break","writable","configurable","enumerable"],"mappings":"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","file":"lazy.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","this_module = ({Symbol}) ->\n\n\t# LazyList definition: nil, LazyList, Iterator,\n\n\tLazyList = (f) -> # construct a LazyList from a function.\n\t\tf[Symbol.iterator] = -> f()\n\t\tf.toString = -> \"LazyList\"\n\t\treturn f\n\n\tnil = LazyList -> nil # xs is empty <==> xs is nil or xs() is nil or xs()() is nil... <==> last xs is nil\n\tnil.toString = -> 'nil'\n\n\tIterator = (it) -> # construct an Iterator(which is a function with status) from a function.\n\t\tit.next = ->\n\t\t\tr = it()\n\t\t\t{value: r, done: r == nil}\n\t\tit.toString = -> \"Iterator\"\n\t\treturn it\n\n\t# LazyList constants: naturals, range, primes,\n\n\tnaturals =\n\t\tLazyList ->\n\t\t\ti = -1\n\t\t\tIterator ->\n\t\t\t\t++i\n\n\trange = (args...) ->\n\t\tif args.length == 0\n\t\t\tnaturals\n\t\telse if args.length == 1\n\t\t\tLazyList ->\n\t\t\t\t[stop] = args\n\t\t\t\ti = -1\n\t\t\t\tIterator ->\n\t\t\t\t\tif ++i < stop then i else nil\n\t\telse if args.length == 2\n\t\t\tLazyList ->\n\t\t\t\t[start, stop] = args\n\t\t\t\tif start < stop\n\t\t\t\t\ti = start - 1\n\t\t\t\t\tIterator ->\n\t\t\t\t\t\tif ++i < stop then i else nil\n\t\t\t\telse\n\t\t\t\t\ti = start + 1\n\t\t\t\t\tIterator ->\n\t\t\t\t\t\tif --i > stop then i else nil\n\t\telse\n\t\t\tLazyList ->\n\t\t\t\t[start, stop, step] = args\n\t\t\t\tthrow 'ERR IN range(): YOU ARE CREATING AN UNLIMITTED RANGE' if stop != start and (stop - start) * step < 0\n\t\t\t\ti = start - step\n\t\t\t\tif start < stop\n\t\t\t\t\tIterator ->\n\t\t\t\t\t\tif (i += step) < stop then i else nil\n\t\t\t\telse\n\t\t\t\t\tIterator ->\n\t\t\t\t\t\tif (i += step) > stop then i else nil\n\n\tprimes = LazyList -> do\n\t\tfilter((x) -> all((p) -> x % p != 0) takeWhile((p) -> p * p <= x) range(2, Infinity)) range(2, Infinity)\n\n\t# LazyList producers: lazy, enumerate, iterate, random_gen, ranged_random_gen, permutation_gen,\n\n\tlazy = (arr) -> #make a LazyList from Function/LazyList/ES6Lazy/Array/String\n\t\tif typeof arr is 'function'\n\t\t\tif arr[Symbol.iterator]? #arr is LazyList\n\t\t\t\tarr\n\t\t\telse #arr is Function\n\t\t\t\tLazyList arr\n\t\telse if arr[Symbol.iterator]? #arr is ES6Lazy\n\t\t\tLazyList ->\n\t\t\t\tit = arr[Symbol.iterator]()\n\t\t\t\tIterator ->\n\t\t\t\t\tr = it.next()\n\t\t\t\t\tif r.done then nil else r.value\n\t\telse #arr is Array or String\n\t\t\tLazyList ->\n\t\t\t\ti = -1\n\t\t\t\tIterator ->\n\t\t\t\t\ti += 1\n\t\t\t\t\tif i < arr.length\n\t\t\t\t\t\tarr[i]\n\t\t\t\t\telse\n\t\t\t\t\t\tnil\n\n\tenumerate = (it) -> # Iterator with index(with key for object)\n\t\tif it[Symbol.iterator]? or it instanceof Array\n\t\t\tzip(naturals, it)\n\t\telse\n\t\t\tLazyList ->\n\t\t\t\tkeys = Object.keys(it)\n\t\t\t\ti = -1\n\t\t\t\tIterator ->\n\t\t\t\t\tif ++i < keys.length then [(k = keys[i]), it[k]] else nil\n\n\trepeat = (x) -> # repeat x\n\t\tLazyList ->\n\t\t\tIterator ->\n\t\t\t\tx\n\n\titerate = (next, init) -> #function next should not change it's argument\n\t\tLazyList ->\n\t\t\tstatus = init\n\t\t\tIterator ->\n\t\t\t\tlast = status\n\t\t\t\tstatus = next status\n\t\t\t\treturn last\n\n\trandom_gen = do ->\n\t\thash = (x) ->\n\t\t\tx = Math.sin(x) * 1e4\n\t\t\tx - Math.floor(x)\n\t\t(opts) ->\n\t\t\tseed = hash(opts?.seed ? Math.random())\n\t\t\titerate hash, seed\n\n\tranged_random_gen = (range, opts) ->\n\t\tseed = opts?.seed ? Math.random()\n\t\tmap((x) -> Math.floor(x * range)) random_gen(seed: seed)\n\n\tpermutation_gen = do ->\n\t\tnext_permutation = (x) ->\n\t\t\tx = x[...]\n\t\t\tl = x.length - 1\n\t\t\t--l while l >= 1 and x[l] <= x[l - 1]\n\n\t\t\tif (l != 0)\n\t\t\t\tm = x.length - 1\n\t\t\t\t--m while m > l - 1 and x[m] <= x[l - 1]\n\t\t\t\t[x[m], x[l - 1]] = [x[l - 1], x[m]]\n\n\t\t\tr = x.length - 1\n\t\t\twhile(l < r)\n\t\t\t\t[x[l], x[r]] = [x[r], x[l]]\n\t\t\t\t++l\n\t\t\t\t--r\n\t\t\treturn x\n\n\t\t(arr) ->\n\t\t\tif arr.length == 0 then nil else\n\t\t\t\tcons(arr[...]) takeWhile((ls) -> json(ls) != json(arr)) drop(1) iterate(next_permutation, arr)\n\n\t# LazyList decorators: take, takeWhile, drop, dropWhile, cons, concat, map, filter, scanl, streak, reverse,\n\n\ttake = (n) ->\n\t\t(xs) ->\n\t\t\tLazyList ->\n\t\t\t\titer = (if typeof xs is 'function' then xs else lazy(xs))[Symbol.iterator]()\n\t\t\t\tc = -1\n\t\t\t\tIterator ->\n\t\t\t\t\tif ++c < n then iter() else nil\n\n\ttakeWhile = (ok) ->\n\t\t(xs) ->\n\t\t\tLazyList ->\n\t\t\t\titer = (if typeof xs is 'function' then xs else lazy(xs))[Symbol.iterator]()\n\t\t\t\tIterator ->\n\t\t\t\t\tif (x = iter()) isnt nil and ok(x) then x else nil\n\n\tdrop = (n) ->\n\t\t(xs) ->\n\t\t\tLazyList ->\n\t\t\t\titer = (if typeof xs is 'function' then xs else lazy(xs))[Symbol.iterator]()\n\t\t\t\tfinished = false\n\t\t\t\t(finished or= (iter() is nil); break if finished) for i in [0...n]\n\t\t\t\tif finished then (-> nil) else iter\n\n\tdropWhile = (ok) ->\n\t\t(xs) ->\n\t\t\tLazyList ->\n\t\t\t\titer = (if typeof xs is 'function' then xs else lazy(xs))[Symbol.iterator]()\n\t\t\t\tnull while ok(x = iter()) and x isnt nil\n\t\t\t\tIterator ->\n\t\t\t\t\t[prevx, x] = [x, iter()]\n\t\t\t\t\treturn prevx\n\n\tcons = (x) ->\n\t\t(xs) ->\n\t\t\tLazyList ->\n\t\t\t\titer = null\n\t\t\t\tIterator ->\n\t\t\t\t\tif iter is null\n\t\t\t\t\t\titer = (if typeof xs is 'function' then xs else lazy(xs))[Symbol.iterator]()\n\t\t\t\t\t\treturn x\n\t\t\t\t\telse\n\t\t\t\t\t\treturn iter()\n\n\tconcat = (ws) ->\n\t\t(xs) ->\n\t\t\tLazyList ->\n\t\t\t\txs_unused = true\n\t\t\t\titer = lazy(ws)[Symbol.iterator]()\n\t\t\t\tIterator ->\n\t\t\t\t\tif xs_unused\n\t\t\t\t\t\tif (x = iter()) isnt nil\n\t\t\t\t\t\t\treturn x\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\titer = lazy(xs)[Symbol.iterator]()\n\t\t\t\t\t\t\txs_unused = false\n\t\t\t\t\t\t\treturn iter()\n\t\t\t\t\telse\n\t\t\t\t\t\treturn iter()\n\n\tmap = (f) ->\n\t\t(xs) ->\n\t\t\tLazyList ->\n\t\t\t\titer = (if typeof xs is 'function' then xs else lazy(xs))[Symbol.iterator]()\n\t\t\t\tIterator ->\n\t\t\t\t\tif (x = iter()) isnt nil then f(x) else nil\n\n\tfilter = (ok) ->\n\t\t(xs) ->\n\t\t\tLazyList ->\n\t\t\t\titer = (if typeof xs is 'function' then xs else lazy(xs))[Symbol.iterator]()\n\t\t\t\tIterator ->\n\t\t\t\t\tnull while not ok(x = iter()) and x isnt nil\n\t\t\t\t\treturn x\n\n\tscanl = (f, r) ->\n\t\t(xs) ->\n\t\t\tLazyList ->\n\t\t\t\titer = (if typeof xs is 'function' then xs else lazy(xs))[Symbol.iterator]()\n\t\t\t\tIterator ->\n\t\t\t\t\tgot = r\n\t\t\t\t\tr = if (x = iter()) isnt nil then f(r, x) else nil\n\t\t\t\t\treturn got\n\n\tstreak = (n) ->\n\t\t(xs) ->\n\t\t\tLazyList ->\n\t\t\t\titer = (if typeof xs is 'function' then xs else lazy(xs))[Symbol.iterator]()\n\t\t\t\tbuf = []\n\t\t\t\tIterator ->\n\t\t\t\t\treturn nil if (x = iter()) is nil\n\t\t\t\t\tbuf.push(x)\n\t\t\t\t\tbuf.shift(1) if buf.length > n\n\t\t\t\t\treturn buf[...]\n\n\treverse = (xs) ->\n\t\tarr = if typeof xs is 'function' then list xs else copy xs\n\t\treturn lazy arr.reverse()\n\n\t# LazyList combiners: join, zip, zipWith, cartProd,\n\n\tjoin = (xss) ->\n\t\tLazyList ->\n\t\t\txs_iter = lazy(xss)[Symbol.iterator]()\n\t\t\txs = xs_iter()\n\t\t\titer = lazy(xs)[Symbol.iterator]()\n\t\t\tIterator ->\n\t\t\t\tif (x = iter()) isnt nil\n\t\t\t\t\treturn x\n\t\t\t\telse if (xs = xs_iter()) isnt nil\n\t\t\t\t\titer = lazy(xs)[Symbol.iterator]()\n\t\t\t\t\treturn iter()\n\t\t\t\telse\n\t\t\t\t\treturn nil\n\n\t{zip, zipWith} = do ->\n\t\tfinished = (arr) ->\n\t\t\tfor x in arr\n\t\t\t\treturn true if x is nil\n\t\t\treturn false\n\n\t\tzip = (xss...) ->\n\t\t\tLazyList ->\n\t\t\t\titers = ((if typeof xs is 'function' then xs else lazy(xs))[Symbol.iterator]() for xs in xss)\n\t\t\t\tIterator ->\n\t\t\t\t\tnext = (iter() for iter in iters)\n\t\t\t\t\tif finished(next)\n\t\t\t\t\t\treturn nil\n\t\t\t\t\telse\n\t\t\t\t\t\treturn next\n\n\t\tzipWith = (f) -> (xss...) ->\n\t\t\tLazyList ->\n\t\t\t\titers = ((if typeof xs is 'function' then xs else lazy(xs))[Symbol.iterator]() for xs in xss)\n\t\t\t\tIterator ->\n\t\t\t\t\tnext = (iter() for iter in iters)\n\t\t\t\t\tif finished(next)\n\t\t\t\t\t\treturn nil\n\t\t\t\t\telse\n\t\t\t\t\t\treturn f(next...)\n\n\t\treturn {zip, zipWith}\n\n\tcartProd = do -> # cartesian product\n\t\tinc_vector = (limits) ->\n\t\t\tlen_minus_1 = limits.length - 1\n\t\t\t(vec) ->\n\t\t\t\ti = len_minus_1\n\t\t\t\tvec[i--] = 0 until ++vec[i] < limits[i] or i <= 0\n\t\t\t\treturn vec\n\n\t\tapply_vector = (space) ->\n\t\t\tlen = space.length\n\t\t\t(vec) ->\n\t\t\t\t(space[i][vec[i]] for i in [0...len])\n\n\t\t(xss...) ->\n\t\t\tLazyList ->\n\t\t\t\txss = (list(xs) for xs in xss)\n\t\t\t\tlimits = (xss[i].length for i in [0...xss.length])\n\t\t\t\t(return nil if len is 0) for len in limits\n\t\t\t\tinc = inc_vector(limits)\n\t\t\t\tget_value = apply_vector(xss)\n\t\t\t\tv = (0 for i in [0...xss.length])\n\t\t\t\tIterator ->\n\t\t\t\t\tif v[0] < limits[0] then (r = get_value v; inc v; r) else nil\n\n\t# LazyList consumers: list, last, length, foldl, best, all, any, foreach,\n\n\tlist = (xs) -> #force list elements of the LazyList to get an array\n\t\tif typeof xs is 'number'\n\t\t\tn = xs\n\t\t\t(xs) -> list take(n) xs\n\t\telse if typeof xs is 'function'\n\t\t\tit = xs[Symbol.iterator]()\n\t\t\t(x while (x = it()) isnt nil)\n\t\telse if xs[Symbol.iterator]?\n\t\t\tit = lazy(xs)[Symbol.iterator]()\n\t\t\t(x while (x = it()) isnt nil)\n\t\telse if xs instanceof Array\n\t\t\txs\n\t\telse\n\t\t\tthrow Error 'list(xs): xs is neither LazyList nor Array'\n\n\tlast = (xs) -> #returns nil if xs is empty\n\t\tif not xs[Symbol.iterator]? then xs[xs.length - 1] ? nil else\n\t\t\titer = (if typeof xs is 'function' then xs else lazy(xs))[Symbol.iterator]()\n\t\t\tr = nil\n\t\t\tr = x while (x = iter()) isnt nil\n\t\t\treturn r\n\n\tlength = (xs) ->\n\t\tif not xs[Symbol.iterator]? then xs.length else\n\t\t\titer = (if typeof xs is 'function' then xs else lazy(xs))[Symbol.iterator]()\n\t\t\tr = 0\n\t\t\t++r while (x = iter()) isnt nil\n\t\t\treturn r\n\n\tfoldl = (f, init) ->\n\t\t(xs) ->\n\t\t\tr = init\n\t\t\titer = (if typeof xs is 'function' then xs else lazy(xs))[Symbol.iterator]()\n\t\t\tr = f(r, x) while (x = iter()) isnt nil\n\t\t\treturn r\n\n\tbest = (better) ->\n\t\t(xs) ->\n\t\t\titer = (if typeof xs is 'function' then xs else lazy(xs))[Symbol.iterator]()\n\t\t\treturn null if (r = iter()) is nil\n\t\t\twhile (it = iter()) isnt nil\n\t\t\t\tr = if better(it, r) then it else r\n\t\t\treturn r\n\n\tall = (f) ->\n\t\tf = ((x) -> x is f) if typeof(f) isnt 'function'\n\t\t(xs) ->\n\t\t\titer = (if typeof xs is 'function' then xs else lazy(xs))[Symbol.iterator]()\n\t\t\twhile (x = iter()) isnt nil\n\t\t\t\treturn false if not f(x)\n\t\t\treturn true\n\n\tany = (f) ->\n\t\tall_not = all (x) -> not f(x)\n\t\t(xs) -> not (all_not xs)\n\n\tbrk = -> brk\n\tbrk.toString = -> 'foreach.break'\n\n\tforeach = (xs, callback, fruit) ->\n\t\titer = (if typeof xs is 'function' then xs else lazy(xs))[Symbol.iterator]()\n\t\twhile (x = iter()) isnt nil\n\t\t\tbreak if callback(x, fruit) is brk\n\t\tfruit\n\n\tObject.defineProperties foreach,\n\t\tbreak:\n\t\t\twritable: false\n\t\t\tconfigurable: false\n\t\t\tenumerable: false\n\t\t\tvalue: brk\n\n\treturn {\n\t\t# LazyList definition\n\t\tnil, LazyList, Iterator, Symbol,\n\n\t\t# LazyList constants\n\t\tnaturals, range, primes,\n\n\t\t# LazyList producers\n\t\tlazy, enumerate, repeat, iterate, random_gen, ranged_random_gen, permutation_gen,\n\n\t\t# LazyList decorators\n\t\tcons, concat, map, filter, take, takeWhile, drop, dropWhile, scanl, streak, reverse,\n\n\t\t# LazyList combiners\n\t\tjoin, zip, zipWith, cartProd,\n\n\t\t# LazyList consumers\n\t\tlist, last, length, foldl, best, all, any, foreach,\n\t}\n\nmodule.exports = this_module\n\tSymbol: Symbol ? {iterator: 'iter'}\n",null],"sourceRoot":"/source/"}