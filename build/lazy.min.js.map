{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","lazy.coffee","lazy.min.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length",1,"module","this_module","slice","arg","Iterator","LazyList","Symbol","all","any","best","brk","cartProd","concat","cons","drop","dropWhile","enumerate","filter","foldl","foreach","iterate","last","lazy","list","map","naturals","nil","permutation_gen","primes","random_gen","range","ranged_random_gen","ref","repeat","reverse","scanl","streak","take","takeWhile","zip","zipWith","iterator","toString","it","next","value","done","args","arguments","stop","start","step","x","p","Infinity","arr","Array","keys","Object","k","init","status","hash","Math","sin","floor","opts","seed","random","next_permutation","m","ref1","ls","json","xs","c","iter","ok","finished","j","prevx","got","buf","push","shift","copy","xss","current_index","len1","iters","results","apply","apply_vector","inc_vector","limits","len_minus_1","vec","space","len","get_value","inc","v","results1","better","all_not","callback","fruit","defineProperties","break","writable","configurable","enumerable"],"mappings":"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","file":"lazy.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","this_module = ({Symbol}) ->\n\n\t# LazyList definition: nil, LazyList, Iterator,\n\n\tLazyList = (f) -> # construct a LazyList from a function.\n\t\tf[Symbol.iterator] = -> f()\n\t\tf.toString = -> \"LazyList\"\n\t\treturn f\n\n\tnil = LazyList -> nil # xs is empty <==> xs is nil or xs() is nil or xs()() is nil... <==> last xs is nil\n\tnil.toString = -> 'nil'\n\n\tIterator = (it) -> # construct an Iterator(which is a function with status) from a function.\n\t\tit.next = ->\n\t\t\tr = it()\n\t\t\t{value: r, done: r == nil}\n\t\tit.toString = -> \"Iterator\"\n\t\treturn it\n\n\t# LazyList constants: naturals, range, primes,\n\n\tnaturals =\n\t\tLazyList ->\n\t\t\ti = -1\n\t\t\tIterator ->\n\t\t\t\t++i\n\n\trange = (args...) ->\n\t\tif args.length == 0\n\t\t\tnaturals\n\t\telse if args.length == 1\n\t\t\tLazyList ->\n\t\t\t\t[stop] = args\n\t\t\t\ti = -1\n\t\t\t\tIterator ->\n\t\t\t\t\tif ++i < stop then i else nil\n\t\telse if args.length == 2\n\t\t\tLazyList ->\n\t\t\t\t[start, stop] = args\n\t\t\t\tif start < stop\n\t\t\t\t\ti = start - 1\n\t\t\t\t\tIterator ->\n\t\t\t\t\t\tif ++i < stop then i else nil\n\t\t\t\telse\n\t\t\t\t\ti = start + 1\n\t\t\t\t\tIterator ->\n\t\t\t\t\t\tif --i > stop then i else nil\n\t\telse\n\t\t\tLazyList ->\n\t\t\t\t[start, stop, step] = args\n\t\t\t\tthrow 'ERR IN range(): YOU ARE CREATING AN UNLIMITTED RANGE' if stop != start and (stop - start) * step < 0\n\t\t\t\ti = start - step\n\t\t\t\tif start < stop\n\t\t\t\t\tIterator ->\n\t\t\t\t\t\tif (i += step) < stop then i else nil\n\t\t\t\telse\n\t\t\t\t\tIterator ->\n\t\t\t\t\t\tif (i += step) > stop then i else nil\n\n\tprimes = LazyList -> do\n\t\tfilter((x) -> all((p) -> x % p != 0) takeWhile((p) -> p * p <= x) range(2, Infinity)) range(2, Infinity)\n\n\t# LazyList producers: lazy, enumerate, iterate, random_gen, ranged_random_gen, permutation_gen,\n\n\tlazy = (arr) -> #make a LazyList from Function/LazyList/ES6Lazy/Array/String\n\t\tif typeof arr is 'function'\n\t\t\tif arr[Symbol.iterator]? #arr is LazyList\n\t\t\t\tarr\n\t\t\telse #arr is Function\n\t\t\t\tLazyList arr\n\t\telse if arr[Symbol.iterator]? #arr is ES6Lazy\n\t\t\tLazyList ->\n\t\t\t\tit = arr[Symbol.iterator]()\n\t\t\t\tIterator ->\n\t\t\t\t\tr = it.next()\n\t\t\t\t\tif r.done then nil else r.value\n\t\telse #arr is Array or String\n\t\t\tLazyList ->\n\t\t\t\ti = -1\n\t\t\t\tIterator ->\n\t\t\t\t\ti += 1\n\t\t\t\t\tif i < arr.length\n\t\t\t\t\t\tarr[i]\n\t\t\t\t\telse\n\t\t\t\t\t\tnil\n\n\tenumerate = (it) -> # Iterator with index(with key for object)\n\t\tif it[Symbol.iterator]? or it instanceof Array\n\t\t\tzip(naturals, it)\n\t\telse\n\t\t\tLazyList ->\n\t\t\t\tkeys = Object.keys(it)\n\t\t\t\ti = -1\n\t\t\t\tIterator ->\n\t\t\t\t\tif ++i < keys.length then [(k = keys[i]), it[k]] else nil\n\n\trepeat = (x) -> # repeat x\n\t\tLazyList ->\n\t\t\tIterator ->\n\t\t\t\tx\n\n\titerate = (next, init) -> #function next should not change it's argument\n\t\tLazyList ->\n\t\t\tstatus = init\n\t\t\tIterator ->\n\t\t\t\tlast = status\n\t\t\t\tstatus = next status\n\t\t\t\treturn last\n\n\trandom_gen = do ->\n\t\thash = (x) ->\n\t\t\tx = Math.sin(x) * 1e4\n\t\t\tx - Math.floor(x)\n\t\t(opts) ->\n\t\t\tseed = hash(opts?.seed ? Math.random())\n\t\t\titerate hash, seed\n\n\tranged_random_gen = (range, opts) ->\n\t\tseed = opts?.seed ? Math.random()\n\t\tmap((x) -> Math.floor(x * range)) random_gen(seed: seed)\n\n\tpermutation_gen = do ->\n\t\tnext_permutation = (x) ->\n\t\t\tx = x[...]\n\t\t\tl = x.length - 1\n\t\t\t--l while l >= 1 and x[l] <= x[l - 1]\n\n\t\t\tif (l != 0)\n\t\t\t\tm = x.length - 1\n\t\t\t\t--m while m > l - 1 and x[m] <= x[l - 1]\n\t\t\t\t[x[m], x[l - 1]] = [x[l - 1], x[m]]\n\n\t\t\tr = x.length - 1\n\t\t\twhile(l < r)\n\t\t\t\t[x[l], x[r]] = [x[r], x[l]]\n\t\t\t\t++l\n\t\t\t\t--r\n\t\t\treturn x\n\n\t\t(arr) ->\n\t\t\tif arr.length == 0 then nil else\n\t\t\t\tconcat [arr[...]], takeWhile((ls) -> json(ls) != json(arr)) drop(1) iterate next_permutation, arr\n\n\t# LazyList decorators: take, takeWhile, drop, dropWhile, cons, map, filter, scanl, streak, reverse,\n\n\ttake = (n) ->\n\t\t(xs) ->\n\t\t\tLazyList ->\n\t\t\t\titer = (if typeof xs is 'function' then xs else lazy(xs))[Symbol.iterator]()\n\t\t\t\tc = -1\n\t\t\t\tIterator ->\n\t\t\t\t\tif ++c < n then iter() else nil\n\n\ttakeWhile = (ok) ->\n\t\t(xs) ->\n\t\t\tLazyList ->\n\t\t\t\titer = (if typeof xs is 'function' then xs else lazy(xs))[Symbol.iterator]()\n\t\t\t\tIterator ->\n\t\t\t\t\tif (x = iter()) isnt nil and ok(x) then x else nil\n\n\tdrop = (n) ->\n\t\t(xs) ->\n\t\t\tLazyList ->\n\t\t\t\titer = (if typeof xs is 'function' then xs else lazy(xs))[Symbol.iterator]()\n\t\t\t\tfinished = false\n\t\t\t\t(finished or= (iter() is nil); break if finished) for i in [0...n]\n\t\t\t\tif finished then (-> nil) else iter\n\n\tdropWhile = (ok) ->\n\t\t(xs) ->\n\t\t\tLazyList ->\n\t\t\t\titer = (if typeof xs is 'function' then xs else lazy(xs))[Symbol.iterator]()\n\t\t\t\tnull while ok(x = iter()) and x isnt nil\n\t\t\t\tIterator ->\n\t\t\t\t\t[prevx, x] = [x, iter()]\n\t\t\t\t\treturn prevx\n\n\tcons = (x) ->\n\t\t(xs) ->\n\t\t\tLazyList ->\n\t\t\t\titer = null\n\t\t\t\tIterator ->\n\t\t\t\t\tif iter is null\n\t\t\t\t\t\titer = (if typeof xs is 'function' then xs else lazy(xs))[Symbol.iterator]()\n\t\t\t\t\t\treturn x\n\t\t\t\t\telse\n\t\t\t\t\t\treturn iter()\n\n\tmap = (f) ->\n\t\t(xs) ->\n\t\t\tLazyList ->\n\t\t\t\titer = (if typeof xs is 'function' then xs else lazy(xs))[Symbol.iterator]()\n\t\t\t\tIterator ->\n\t\t\t\t\tif (x = iter()) isnt nil then f(x) else nil\n\n\tfilter = (ok) ->\n\t\t(xs) ->\n\t\t\tLazyList ->\n\t\t\t\titer = (if typeof xs is 'function' then xs else lazy(xs))[Symbol.iterator]()\n\t\t\t\tIterator ->\n\t\t\t\t\tnull while not ok(x = iter()) and x isnt nil\n\t\t\t\t\treturn x\n\n\tscanl = (f, r) ->\n\t\t(xs) ->\n\t\t\tLazyList ->\n\t\t\t\titer = (if typeof xs is 'function' then xs else lazy(xs))[Symbol.iterator]()\n\t\t\t\tIterator ->\n\t\t\t\t\tgot = r\n\t\t\t\t\tr = if (x = iter()) isnt nil then f(r, x) else nil\n\t\t\t\t\treturn got\n\n\tstreak = (n) ->\n\t\t(xs) ->\n\t\t\tLazyList ->\n\t\t\t\titer = (if typeof xs is 'function' then xs else lazy(xs))[Symbol.iterator]()\n\t\t\t\tbuf = []\n\t\t\t\tIterator ->\n\t\t\t\t\treturn nil if (x = iter()) is nil\n\t\t\t\t\tbuf.push(x)\n\t\t\t\t\tbuf.shift(1) if buf.length > n\n\t\t\t\t\treturn buf[...]\n\n\treverse = (xs) ->\n\t\tarr = if typeof xs is 'function' then list xs else copy xs\n\t\treturn lazy arr.reverse()\n\n\t# LazyList combiners: concat, zip, zipWith, cartProd,\n\n\tconcat = (xss...) ->\n\t\tLazyList ->\n\t\t\titer = (if xss[0][Symbol.iterator]? then xss[0] else lazy(xss[0]))[Symbol.iterator]()\n\t\t\tcurrent_index = 0\n\t\t\tIterator ->\n\t\t\t\tif (x = iter()) isnt nil\n\t\t\t\t\treturn x\n\t\t\t\telse if (++current_index < xss.length)\n\t\t\t\t\titer = (if xss[current_index][Symbol.iterator]? then xss[current_index] else lazy(xss[current_index]))[Symbol.iterator]()\n\t\t\t\t\treturn iter()\n\t\t\t\telse\n\t\t\t\t\treturn nil\n\n\t{zip, zipWith} = do ->\n\t\tfinished = (arr) ->\n\t\t\tfor x in arr\n\t\t\t\treturn true if x is nil\n\t\t\treturn false\n\n\t\tzip = (xss...) ->\n\t\t\tLazyList ->\n\t\t\t\titers = ((if typeof xs is 'function' then xs else lazy(xs))[Symbol.iterator]() for xs in xss)\n\t\t\t\tIterator ->\n\t\t\t\t\tnext = (iter() for iter in iters)\n\t\t\t\t\tif finished(next)\n\t\t\t\t\t\treturn nil\n\t\t\t\t\telse\n\t\t\t\t\t\treturn next\n\n\t\tzipWith = (f) -> (xss...) ->\n\t\t\tLazyList ->\n\t\t\t\titers = ((if typeof xs is 'function' then xs else lazy(xs))[Symbol.iterator]() for xs in xss)\n\t\t\t\tIterator ->\n\t\t\t\t\tnext = (iter() for iter in iters)\n\t\t\t\t\tif finished(next)\n\t\t\t\t\t\treturn nil\n\t\t\t\t\telse\n\t\t\t\t\t\treturn f(next...)\n\n\t\treturn {zip, zipWith}\n\n\tcartProd = do -> # cartesian product\n\t\tinc_vector = (limits) ->\n\t\t\tlen_minus_1 = limits.length - 1\n\t\t\t(vec) ->\n\t\t\t\ti = len_minus_1\n\t\t\t\tvec[i--] = 0 until ++vec[i] < limits[i] or i <= 0\n\t\t\t\treturn vec\n\n\t\tapply_vector = (space) ->\n\t\t\tlen = space.length\n\t\t\t(vec) ->\n\t\t\t\t(space[i][vec[i]] for i in [0...len])\n\n\t\t(xss...) ->\n\t\t\tLazyList ->\n\t\t\t\txss = (list(xs) for xs in xss)\n\t\t\t\tlimits = (xss[i].length for i in [0...xss.length])\n\t\t\t\t(return nil if len is 0) for len in limits\n\t\t\t\tinc = inc_vector(limits)\n\t\t\t\tget_value = apply_vector(xss)\n\t\t\t\tv = (0 for i in [0...xss.length])\n\t\t\t\tIterator ->\n\t\t\t\t\tif v[0] < limits[0] then (r = get_value v; inc v; r) else nil\n\n\t# LazyList consumers: list, last, length, foldl, best, all, any, foreach,\n\n\tlist = (xs) -> #force list elements of the LazyList to get an array\n\t\tif typeof xs is 'number'\n\t\t\tn = xs\n\t\t\t(xs) -> list take(n) xs\n\t\telse if typeof xs is 'function'\n\t\t\tit = xs[Symbol.iterator]()\n\t\t\t(x while (x = it()) isnt nil)\n\t\telse if xs[Symbol.iterator]?\n\t\t\tit = lazy(xs)[Symbol.iterator]()\n\t\t\t(x while (x = it()) isnt nil)\n\t\telse if xs instanceof Array\n\t\t\txs\n\t\telse\n\t\t\tthrow Error 'list(xs): xs is neither LazyList nor Array'\n\n\tlast = (xs) -> #returns nil if xs is empty\n\t\tif not xs[Symbol.iterator]? then xs[xs.length - 1] ? nil else\n\t\t\titer = (if typeof xs is 'function' then xs else lazy(xs))[Symbol.iterator]()\n\t\t\tr = nil\n\t\t\tr = x while (x = iter()) isnt nil\n\t\t\treturn r\n\n\tlength = (xs) ->\n\t\tif not xs[Symbol.iterator]? then xs.length else\n\t\t\titer = (if typeof xs is 'function' then xs else lazy(xs))[Symbol.iterator]()\n\t\t\tr = 0\n\t\t\t++r while (x = iter()) isnt nil\n\t\t\treturn r\n\n\tfoldl = (f, init) ->\n\t\t(xs) ->\n\t\t\tr = init\n\t\t\titer = (if typeof xs is 'function' then xs else lazy(xs))[Symbol.iterator]()\n\t\t\tr = f(r, x) while (x = iter()) isnt nil\n\t\t\treturn r\n\n\tbest = (better) ->\n\t\t(xs) ->\n\t\t\titer = (if typeof xs is 'function' then xs else lazy(xs))[Symbol.iterator]()\n\t\t\treturn null if (r = iter()) is nil\n\t\t\twhile (it = iter()) isnt nil\n\t\t\t\tr = if better(it, r) then it else r\n\t\t\treturn r\n\n\tall = (f) ->\n\t\tf = ((x) -> x is f) if typeof(f) isnt 'function'\n\t\t(xs) ->\n\t\t\titer = (if typeof xs is 'function' then xs else lazy(xs))[Symbol.iterator]()\n\t\t\twhile (x = iter()) isnt nil\n\t\t\t\treturn false if not f(x)\n\t\t\treturn true\n\n\tany = (f) ->\n\t\tall_not = all (x) -> not f(x)\n\t\t(xs) -> not (all_not xs)\n\n\tbrk = -> brk\n\tbrk.toString = -> 'foreach.break'\n\n\tforeach = (xs, callback, fruit) ->\n\t\titer = (if typeof xs is 'function' then xs else lazy(xs))[Symbol.iterator]()\n\t\twhile (x = iter()) isnt nil\n\t\t\tbreak if callback(x, fruit) is brk\n\t\tfruit\n\n\tObject.defineProperties foreach,\n\t\tbreak:\n\t\t\twritable: false\n\t\t\tconfigurable: false\n\t\t\tenumerable: false\n\t\t\tvalue: brk\n\n\treturn {\n\t\t# LazyList definition\n\t\tnil, LazyList, Iterator, Symbol,\n\n\t\t# LazyList constants\n\t\tnaturals, range, primes,\n\n\t\t# LazyList producers\n\t\tlazy, enumerate, repeat, iterate, random_gen, ranged_random_gen, permutation_gen,\n\n\t\t# LazyList decorators\n\t\tcons, map, filter, take, takeWhile, drop, dropWhile, scanl, streak, reverse,\n\n\t\t# LazyList combiners\n\t\tconcat, zip, zipWith, cartProd,\n\n\t\t# LazyList consumers\n\t\tlist, last, length, foldl, best, all, any, foreach,\n\t}\n\nmodule.exports = this_module\n\tSymbol: Symbol ? {iterator: 'iter'}\n",null],"sourceRoot":"/source/"}