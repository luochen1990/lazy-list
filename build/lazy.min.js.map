{"version":3,"sources":["/source/node_modules/browserify/node_modules/browser-pack/_prelude.js","/source/src/lazy.coffee","lazy.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","lazy","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length",1,"this_module","slice","arg","Iterator","LazyList","Symbol","all","any","best","brk","cartProd","concat","cons","drop","dropWhile","enumerate","filter","foldl","foreach","iterate","join","last","list","map","naturals","nil","permutation_gen","primes","random_gen","range","ranged_random_gen","ref","repeat","reverse","scanl","streak","take","takeWhile","zip","zipWith","iterator","toString","it","next","value","done","args","arguments","stop","start","step","x","p","Infinity","arr","Array","keys","Object","k","init","status","hash","Math","sin","floor","opts","seed","random","next_permutation","m","ref1","ls","json","xs","c","iter","ok","finished","j","prevx","ws","xs_unused","got","buf","push","shift","xss","xs_iter","len1","iters","results","apply","apply_vector","inc_vector","limits","len_minus_1","vec","space","len","get_value","inc","v","results1","better","all_not","callback","fruit","defineProperties","break","writable","configurable","enumerable"],"mappings":"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","file":"lazy.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","this_module = ({Symbol}) ->\n\n\t# LazyList definition: nil, LazyList, Iterator,\n\n\tLazyList = (f) -> # construct a LazyList from a function.\n\t\tf[Symbol.iterator] = -> f()\n\t\tf.toString = -> \"LazyList\"\n\t\treturn f\n\n\tnil = LazyList -> nil # xs is empty <==> xs is nil or xs() is nil or xs()() is nil... <==> last xs is nil\n\tnil.toString = -> 'nil'\n\n\tIterator = (it) -> # construct an Iterator(which is a function with status) from a function.\n\t\tit.next = ->\n\t\t\tr = it()\n\t\t\t{value: r, done: r == nil}\n\t\tit.toString = -> \"Iterator\"\n\t\treturn it\n\n\t# LazyList constants: naturals, range, primes,\n\n\tnaturals =\n\t\tLazyList ->\n\t\t\ti = -1\n\t\t\tIterator ->\n\t\t\t\t++i\n\n\trange = (args...) ->\n\t\tif args.length == 0\n\t\t\tnaturals\n\t\telse if args.length == 1\n\t\t\tLazyList ->\n\t\t\t\t[stop] = args\n\t\t\t\ti = -1\n\t\t\t\tIterator ->\n\t\t\t\t\tif ++i < stop then i else nil\n\t\telse if args.length == 2\n\t\t\tLazyList ->\n\t\t\t\t[start, stop] = args\n\t\t\t\tif start < stop\n\t\t\t\t\ti = start - 1\n\t\t\t\t\tIterator ->\n\t\t\t\t\t\tif ++i < stop then i else nil\n\t\t\t\telse\n\t\t\t\t\ti = start + 1\n\t\t\t\t\tIterator ->\n\t\t\t\t\t\tif --i > stop then i else nil\n\t\telse\n\t\t\tLazyList ->\n\t\t\t\t[start, stop, step] = args\n\t\t\t\tthrow 'ERR IN range(): YOU ARE CREATING AN UNLIMITTED RANGE' if stop != start and (stop - start) * step < 0\n\t\t\t\ti = start - step\n\t\t\t\tif start < stop\n\t\t\t\t\tIterator ->\n\t\t\t\t\t\tif (i += step) < stop then i else nil\n\t\t\t\telse\n\t\t\t\t\tIterator ->\n\t\t\t\t\t\tif (i += step) > stop then i else nil\n\n\tprimes = LazyList -> do\n\t\tfilter((x) -> all((p) -> x % p != 0) takeWhile((p) -> p * p <= x) range(2, Infinity)) range(2, Infinity)\n\n\t# LazyList producers: lazy, enumerate, iterate, random_gen, ranged_random_gen, permutation_gen,\n\n\tlazy = (arr) -> #make a LazyList from Function/LazyList/ES6Lazy/Array/String\n\t\tif typeof arr is 'function'\n\t\t\tif arr[Symbol.iterator]? #arr is LazyList\n\t\t\t\tarr\n\t\t\telse #arr is Function\n\t\t\t\tLazyList arr\n\t\telse if arr[Symbol.iterator]? #arr is ES6Lazy\n\t\t\tLazyList ->\n\t\t\t\tit = arr[Symbol.iterator]()\n\t\t\t\tIterator ->\n\t\t\t\t\tr = it.next()\n\t\t\t\t\tif r.done then nil else r.value\n\t\telse #arr is Array or String\n\t\t\tLazyList ->\n\t\t\t\ti = -1\n\t\t\t\tIterator ->\n\t\t\t\t\ti += 1\n\t\t\t\t\tif i < arr.length\n\t\t\t\t\t\tarr[i]\n\t\t\t\t\telse\n\t\t\t\t\t\tnil\n\n\tenumerate = (it) -> # Iterator with index(with key for object)\n\t\tif it[Symbol.iterator]? or it instanceof Array\n\t\t\tzip(naturals, it)\n\t\telse\n\t\t\tLazyList ->\n\t\t\t\tkeys = Object.keys(it)\n\t\t\t\ti = -1\n\t\t\t\tIterator ->\n\t\t\t\t\tif ++i < keys.length then [(k = keys[i]), it[k]] else nil\n\n\trepeat = (x) -> # repeat x\n\t\tLazyList ->\n\t\t\tIterator ->\n\t\t\t\tx\n\n\titerate = (next, init) -> #function next should not change it's argument\n\t\tLazyList ->\n\t\t\tstatus = init\n\t\t\tIterator ->\n\t\t\t\tlast = status\n\t\t\t\tstatus = next status\n\t\t\t\treturn last\n\n\trandom_gen = do ->\n\t\thash = (x) ->\n\t\t\tx = Math.sin(x) * 1e4\n\t\t\tx - Math.floor(x)\n\t\t(opts) ->\n\t\t\tseed = hash(opts?.seed ? Math.random())\n\t\t\titerate hash, seed\n\n\tranged_random_gen = (range, opts) ->\n\t\tseed = opts?.seed ? Math.random()\n\t\tmap((x) -> Math.floor(x * range)) random_gen(seed: seed)\n\n\tpermutation_gen = do ->\n\t\tnext_permutation = (x) ->\n\t\t\tx = x[...]\n\t\t\tl = x.length - 1\n\t\t\t--l while l >= 1 and x[l] <= x[l - 1]\n\n\t\t\tif (l != 0)\n\t\t\t\tm = x.length - 1\n\t\t\t\t--m while m > l - 1 and x[m] <= x[l - 1]\n\t\t\t\t[x[m], x[l - 1]] = [x[l - 1], x[m]]\n\n\t\t\tr = x.length - 1\n\t\t\twhile(l < r)\n\t\t\t\t[x[l], x[r]] = [x[r], x[l]]\n\t\t\t\t++l\n\t\t\t\t--r\n\t\t\treturn x\n\n\t\t(arr) ->\n\t\t\tif arr.length == 0 then nil else\n\t\t\t\tcons(arr[...]) takeWhile((ls) -> json(ls) != json(arr)) drop(1) iterate(next_permutation, arr)\n\n\t# LazyList decorators: take, takeWhile, drop, dropWhile, cons, concat, map, filter, scanl, streak, reverse,\n\n\ttake = (n) ->\n\t\t(xs) ->\n\t\t\tLazyList ->\n\t\t\t\titer = lazy(xs)[Symbol.iterator]()\n\t\t\t\tc = -1\n\t\t\t\tIterator ->\n\t\t\t\t\tif ++c < n then iter() else nil\n\n\ttakeWhile = (ok) ->\n\t\t(xs) ->\n\t\t\tLazyList ->\n\t\t\t\titer = lazy(xs)[Symbol.iterator]()\n\t\t\t\tIterator ->\n\t\t\t\t\tif (x = iter()) isnt nil and ok(x) then x else nil\n\n\tdrop = (n) ->\n\t\t(xs) ->\n\t\t\tLazyList ->\n\t\t\t\titer = lazy(xs)[Symbol.iterator]()\n\t\t\t\tfinished = false\n\t\t\t\t(finished or= (iter() is nil); break if finished) for i in [0...n]\n\t\t\t\tif finished then (-> nil) else iter\n\n\tdropWhile = (ok) ->\n\t\t(xs) ->\n\t\t\tLazyList ->\n\t\t\t\titer = lazy(xs)[Symbol.iterator]()\n\t\t\t\tnull while ok(x = iter()) and x isnt nil\n\t\t\t\tIterator ->\n\t\t\t\t\t[prevx, x] = [x, iter()]\n\t\t\t\t\treturn prevx\n\n\tcons = (x) ->\n\t\t(xs) ->\n\t\t\tLazyList ->\n\t\t\t\titer = null\n\t\t\t\tIterator ->\n\t\t\t\t\tif iter is null\n\t\t\t\t\t\titer = lazy(xs)[Symbol.iterator]()\n\t\t\t\t\t\treturn x\n\t\t\t\t\telse\n\t\t\t\t\t\treturn iter()\n\n\tconcat = (ws) ->\n\t\t(xs) ->\n\t\t\tLazyList ->\n\t\t\t\txs_unused = true\n\t\t\t\titer = lazy(ws)[Symbol.iterator]()\n\t\t\t\tIterator ->\n\t\t\t\t\tif xs_unused\n\t\t\t\t\t\tif (x = iter()) isnt nil\n\t\t\t\t\t\t\treturn x\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\titer = lazy(xs)[Symbol.iterator]()\n\t\t\t\t\t\t\txs_unused = false\n\t\t\t\t\t\t\treturn iter()\n\t\t\t\t\telse\n\t\t\t\t\t\treturn iter()\n\n\tmap = (f) ->\n\t\t(xs) ->\n\t\t\tLazyList ->\n\t\t\t\titer = lazy(xs)[Symbol.iterator]()\n\t\t\t\tIterator ->\n\t\t\t\t\tif (x = iter()) isnt nil then f(x) else nil\n\n\tfilter = (ok) ->\n\t\t(xs) ->\n\t\t\tLazyList ->\n\t\t\t\titer = lazy(xs)[Symbol.iterator]()\n\t\t\t\tIterator ->\n\t\t\t\t\tnull while not ok(x = iter()) and x isnt nil\n\t\t\t\t\treturn x\n\n\tscanl = (f, r) ->\n\t\t(xs) ->\n\t\t\tLazyList ->\n\t\t\t\titer = lazy(xs)[Symbol.iterator]()\n\t\t\t\tIterator ->\n\t\t\t\t\tgot = r\n\t\t\t\t\tr = if (x = iter()) isnt nil then f(r, x) else nil\n\t\t\t\t\treturn got\n\n\tstreak = (n) ->\n\t\t(xs) ->\n\t\t\tLazyList ->\n\t\t\t\titer = lazy(xs)[Symbol.iterator]()\n\t\t\t\tbuf = []\n\t\t\t\tIterator ->\n\t\t\t\t\treturn nil if (x = iter()) is nil\n\t\t\t\t\tbuf.push(x)\n\t\t\t\t\tbuf.shift(1) if buf.length > n\n\t\t\t\t\treturn buf[...]\n\n\treverse = (xs) ->\n\t\tarr = list lazy(xs)\n\t\treturn lazy arr.reverse()\n\n\t# LazyList combiners: join, zip, zipWith, cartProd,\n\n\tjoin = (xss) ->\n\t\tLazyList ->\n\t\t\txs_iter = lazy(xss)[Symbol.iterator]()\n\t\t\txs = xs_iter()\n\t\t\titer = lazy(xs)[Symbol.iterator]()\n\t\t\tIterator ->\n\t\t\t\tif (x = iter()) isnt nil\n\t\t\t\t\treturn x\n\t\t\t\telse if (xs = xs_iter()) isnt nil\n\t\t\t\t\titer = lazy(xs)[Symbol.iterator]()\n\t\t\t\t\treturn iter()\n\t\t\t\telse\n\t\t\t\t\treturn nil\n\n\t{zip, zipWith} = do ->\n\t\tfinished = (arr) ->\n\t\t\tfor x in arr\n\t\t\t\treturn true if x is nil\n\t\t\treturn false\n\n\t\tzip = (xss...) ->\n\t\t\tLazyList ->\n\t\t\t\titers = (lazy(xs)[Symbol.iterator]() for xs in xss)\n\t\t\t\tIterator ->\n\t\t\t\t\tnext = (iter() for iter in iters)\n\t\t\t\t\tif finished(next)\n\t\t\t\t\t\treturn nil\n\t\t\t\t\telse\n\t\t\t\t\t\treturn next\n\n\t\tzipWith = (f) -> (xss...) ->\n\t\t\tLazyList ->\n\t\t\t\titers = (lazy(xs)[Symbol.iterator]() for xs in xss)\n\t\t\t\tIterator ->\n\t\t\t\t\tnext = (iter() for iter in iters)\n\t\t\t\t\tif finished(next)\n\t\t\t\t\t\treturn nil\n\t\t\t\t\telse\n\t\t\t\t\t\treturn f(next...)\n\n\t\treturn {zip, zipWith}\n\n\tcartProd = do -> # cartesian product\n\t\tinc_vector = (limits) ->\n\t\t\tlen_minus_1 = limits.length - 1\n\t\t\t(vec) ->\n\t\t\t\ti = len_minus_1\n\t\t\t\tvec[i--] = 0 until ++vec[i] < limits[i] or i <= 0\n\t\t\t\treturn vec\n\n\t\tapply_vector = (space) ->\n\t\t\tlen = space.length\n\t\t\t(vec) ->\n\t\t\t\t(space[i][vec[i]] for i in [0...len])\n\n\t\t(xss...) ->\n\t\t\tLazyList ->\n\t\t\t\txss = (list(xs) for xs in xss)\n\t\t\t\tlimits = (xss[i].length for i in [0...xss.length])\n\t\t\t\t(return nil if len is 0) for len in limits\n\t\t\t\tinc = inc_vector(limits)\n\t\t\t\tget_value = apply_vector(xss)\n\t\t\t\tv = (0 for i in [0...xss.length])\n\t\t\t\tIterator ->\n\t\t\t\t\tif v[0] < limits[0] then (r = get_value v; inc v; r) else nil\n\n\t# LazyList consumers: list, last, length, foldl, best, all, any, foreach,\n\n\tlist = (xs) -> #force list elements of the LazyList to get an array\n\t\tif xs instanceof Array\n\t\t\txs\n\t\telse if typeof xs is 'function'\n\t\t\tit = xs[Symbol.iterator]()\n\t\t\t(x while (x = it()) isnt nil)\n\t\telse if xs[Symbol.iterator]?\n\t\t\tit = lazy(xs)[Symbol.iterator]()\n\t\t\t(x while (x = it()) isnt nil)\n\t\telse if typeof xs is 'number'\n\t\t\tn = xs\n\t\t\t(xs) -> list take(n) xs\n\t\telse\n\t\t\tthrow Error 'list(xs): xs is neither LazyList nor Array'\n\n\tlast = (xs) -> #returns nil if xs is empty\n\t\tif not xs[Symbol.iterator]? then xs[xs.length - 1] ? nil else\n\t\t\titer = lazy(xs)[Symbol.iterator]()\n\t\t\tr = nil\n\t\t\tr = x while (x = iter()) isnt nil\n\t\t\treturn r\n\n\tlength = (xs) ->\n\t\tif not xs[Symbol.iterator]? then xs.length else\n\t\t\titer = lazy(xs)[Symbol.iterator]()\n\t\t\tr = 0\n\t\t\t++r while (x = iter()) isnt nil\n\t\t\treturn r\n\n\tfoldl = (f, init) ->\n\t\t(xs) ->\n\t\t\tr = init\n\t\t\titer = lazy(xs)[Symbol.iterator]()\n\t\t\tr = f(r, x) while (x = iter()) isnt nil\n\t\t\treturn r\n\n\tbest = (better) ->\n\t\t(xs) ->\n\t\t\titer = lazy(xs)[Symbol.iterator]()\n\t\t\treturn null if (r = iter()) is nil\n\t\t\twhile (it = iter()) isnt nil\n\t\t\t\tr = if better(it, r) then it else r\n\t\t\treturn r\n\n\tall = (f) ->\n\t\tf = ((x) -> x is f) if typeof(f) isnt 'function'\n\t\t(xs) ->\n\t\t\titer = lazy(xs)[Symbol.iterator]()\n\t\t\twhile (x = iter()) isnt nil\n\t\t\t\treturn false if not f(x)\n\t\t\treturn true\n\n\tany = (f) ->\n\t\tall_not = all (x) -> not f(x)\n\t\t(xs) -> not (all_not xs)\n\n\tbrk = -> brk\n\tbrk.toString = -> 'foreach.break'\n\n\tforeach = (xs, callback, fruit) ->\n\t\titer = lazy(xs)[Symbol.iterator]()\n\t\twhile (x = iter()) isnt nil\n\t\t\tbreak if callback(x, fruit) is brk\n\t\tfruit\n\n\tObject.defineProperties foreach,\n\t\tbreak:\n\t\t\twritable: false\n\t\t\tconfigurable: false\n\t\t\tenumerable: false\n\t\t\tvalue: brk\n\n\treturn {\n\t\t# LazyList definition\n\t\tnil, LazyList, Iterator, Symbol,\n\n\t\t# LazyList constants\n\t\tnaturals, range, primes,\n\n\t\t# LazyList producers\n\t\tlazy, enumerate, repeat, iterate, random_gen, ranged_random_gen, permutation_gen,\n\n\t\t# LazyList decorators\n\t\tcons, concat, map, filter, take, takeWhile, drop, dropWhile, scanl, streak, reverse,\n\n\t\t# LazyList combiners\n\t\tjoin, zip, zipWith, cartProd,\n\n\t\t# LazyList consumers\n\t\tlist, last, length, foldl, best, all, any, foreach,\n\t}\n\nmodule.exports = this_module\n\tSymbol: Symbol ? {iterator: 'iter'}\n\n","(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.lazy = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\nvar this_module,\n  slice = [].slice;\n\nthis_module = function(arg) {\n  var Iterator, LazyList, Symbol, all, any, best, brk, cartProd, concat, cons, drop, dropWhile, enumerate, filter, foldl, foreach, iterate, join, last, lazy, length, list, map, naturals, nil, permutation_gen, primes, random_gen, range, ranged_random_gen, ref, repeat, reverse, scanl, streak, take, takeWhile, zip, zipWith;\n  Symbol = arg.Symbol;\n  LazyList = function(f) {\n    f[Symbol.iterator] = function() {\n      return f();\n    };\n    f.toString = function() {\n      return \"LazyList\";\n    };\n    return f;\n  };\n  nil = LazyList(function() {\n    return nil;\n  });\n  nil.toString = function() {\n    return 'nil';\n  };\n  Iterator = function(it) {\n    it.next = function() {\n      var r;\n      r = it();\n      return {\n        value: r,\n        done: r === nil\n      };\n    };\n    it.toString = function() {\n      return \"Iterator\";\n    };\n    return it;\n  };\n  naturals = LazyList(function() {\n    var i;\n    i = -1;\n    return Iterator(function() {\n      return ++i;\n    });\n  });\n  range = function() {\n    var args;\n    args = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n    if (args.length === 0) {\n      return naturals;\n    } else if (args.length === 1) {\n      return LazyList(function() {\n        var i, stop;\n        stop = args[0];\n        i = -1;\n        return Iterator(function() {\n          if (++i < stop) {\n            return i;\n          } else {\n            return nil;\n          }\n        });\n      });\n    } else if (args.length === 2) {\n      return LazyList(function() {\n        var i, start, stop;\n        start = args[0], stop = args[1];\n        if (start < stop) {\n          i = start - 1;\n          return Iterator(function() {\n            if (++i < stop) {\n              return i;\n            } else {\n              return nil;\n            }\n          });\n        } else {\n          i = start + 1;\n          return Iterator(function() {\n            if (--i > stop) {\n              return i;\n            } else {\n              return nil;\n            }\n          });\n        }\n      });\n    } else {\n      return LazyList(function() {\n        var i, start, step, stop;\n        start = args[0], stop = args[1], step = args[2];\n        if (stop !== start && (stop - start) * step < 0) {\n          throw 'ERR IN range(): YOU ARE CREATING AN UNLIMITTED RANGE';\n        }\n        i = start - step;\n        if (start < stop) {\n          return Iterator(function() {\n            if ((i += step) < stop) {\n              return i;\n            } else {\n              return nil;\n            }\n          });\n        } else {\n          return Iterator(function() {\n            if ((i += step) > stop) {\n              return i;\n            } else {\n              return nil;\n            }\n          });\n        }\n      });\n    }\n  };\n  primes = LazyList(function() {\n    return filter(function(x) {\n      return all(function(p) {\n        return x % p !== 0;\n      })(takeWhile(function(p) {\n        return p * p <= x;\n      })(range(2, Infinity)));\n    })(range(2, Infinity))();\n  });\n  lazy = function(arr) {\n    if (typeof arr === 'function') {\n      if (arr[Symbol.iterator] != null) {\n        return arr;\n      } else {\n        return LazyList(arr);\n      }\n    } else if (arr[Symbol.iterator] != null) {\n      return LazyList(function() {\n        var it;\n        it = arr[Symbol.iterator]();\n        return Iterator(function() {\n          var r;\n          r = it.next();\n          if (r.done) {\n            return nil;\n          } else {\n            return r.value;\n          }\n        });\n      });\n    } else {\n      return LazyList(function() {\n        var i;\n        i = -1;\n        return Iterator(function() {\n          i += 1;\n          if (i < arr.length) {\n            return arr[i];\n          } else {\n            return nil;\n          }\n        });\n      });\n    }\n  };\n  enumerate = function(it) {\n    if ((it[Symbol.iterator] != null) || it instanceof Array) {\n      return zip(naturals, it);\n    } else {\n      return LazyList(function() {\n        var i, keys;\n        keys = Object.keys(it);\n        i = -1;\n        return Iterator(function() {\n          var k;\n          if (++i < keys.length) {\n            return [(k = keys[i]), it[k]];\n          } else {\n            return nil;\n          }\n        });\n      });\n    }\n  };\n  repeat = function(x) {\n    return LazyList(function() {\n      return Iterator(function() {\n        return x;\n      });\n    });\n  };\n  iterate = function(next, init) {\n    return LazyList(function() {\n      var status;\n      status = init;\n      return Iterator(function() {\n        var last;\n        last = status;\n        status = next(status);\n        return last;\n      });\n    });\n  };\n  random_gen = (function() {\n    var hash;\n    hash = function(x) {\n      x = Math.sin(x) * 1e4;\n      return x - Math.floor(x);\n    };\n    return function(opts) {\n      var ref, seed;\n      seed = hash((ref = opts != null ? opts.seed : void 0) != null ? ref : Math.random());\n      return iterate(hash, seed);\n    };\n  })();\n  ranged_random_gen = function(range, opts) {\n    var ref, seed;\n    seed = (ref = opts != null ? opts.seed : void 0) != null ? ref : Math.random();\n    return map(function(x) {\n      return Math.floor(x * range);\n    })(random_gen({\n      seed: seed\n    }));\n  };\n  permutation_gen = (function() {\n    var next_permutation;\n    next_permutation = function(x) {\n      var l, m, r, ref, ref1;\n      x = x.slice(0);\n      l = x.length - 1;\n      while (l >= 1 && x[l] <= x[l - 1]) {\n        --l;\n      }\n      if (l !== 0) {\n        m = x.length - 1;\n        while (m > l - 1 && x[m] <= x[l - 1]) {\n          --m;\n        }\n        ref = [x[l - 1], x[m]], x[m] = ref[0], x[l - 1] = ref[1];\n      }\n      r = x.length - 1;\n      while (l < r) {\n        ref1 = [x[r], x[l]], x[l] = ref1[0], x[r] = ref1[1];\n        ++l;\n        --r;\n      }\n      return x;\n    };\n    return function(arr) {\n      if (arr.length === 0) {\n        return nil;\n      } else {\n        return cons(arr.slice(0))(takeWhile(function(ls) {\n          return json(ls) !== json(arr);\n        })(drop(1)(iterate(next_permutation, arr))));\n      }\n    };\n  })();\n  take = function(n) {\n    return function(xs) {\n      return LazyList(function() {\n        var c, iter;\n        iter = lazy(xs)[Symbol.iterator]();\n        c = -1;\n        return Iterator(function() {\n          if (++c < n) {\n            return iter();\n          } else {\n            return nil;\n          }\n        });\n      });\n    };\n  };\n  takeWhile = function(ok) {\n    return function(xs) {\n      return LazyList(function() {\n        var iter;\n        iter = lazy(xs)[Symbol.iterator]();\n        return Iterator(function() {\n          var x;\n          if ((x = iter()) !== nil && ok(x)) {\n            return x;\n          } else {\n            return nil;\n          }\n        });\n      });\n    };\n  };\n  drop = function(n) {\n    return function(xs) {\n      return LazyList(function() {\n        var finished, i, iter, j, ref;\n        iter = lazy(xs)[Symbol.iterator]();\n        finished = false;\n        for (i = j = 0, ref = n; 0 <= ref ? j < ref : j > ref; i = 0 <= ref ? ++j : --j) {\n          finished || (finished = iter() === nil);\n          if (finished) {\n            break;\n          }\n        }\n        if (finished) {\n          return function() {\n            return nil;\n          };\n        } else {\n          return iter;\n        }\n      });\n    };\n  };\n  dropWhile = function(ok) {\n    return function(xs) {\n      return LazyList(function() {\n        var iter, x;\n        iter = lazy(xs)[Symbol.iterator]();\n        while (ok(x = iter()) && x !== nil) {\n          null;\n        }\n        return Iterator(function() {\n          var prevx, ref;\n          ref = [x, iter()], prevx = ref[0], x = ref[1];\n          return prevx;\n        });\n      });\n    };\n  };\n  cons = function(x) {\n    return function(xs) {\n      return LazyList(function() {\n        var iter;\n        iter = null;\n        return Iterator(function() {\n          if (iter === null) {\n            iter = lazy(xs)[Symbol.iterator]();\n            return x;\n          } else {\n            return iter();\n          }\n        });\n      });\n    };\n  };\n  concat = function(ws) {\n    return function(xs) {\n      return LazyList(function() {\n        var iter, xs_unused;\n        xs_unused = true;\n        iter = lazy(ws)[Symbol.iterator]();\n        return Iterator(function() {\n          var x;\n          if (xs_unused) {\n            if ((x = iter()) !== nil) {\n              return x;\n            } else {\n              iter = lazy(xs)[Symbol.iterator]();\n              xs_unused = false;\n              return iter();\n            }\n          } else {\n            return iter();\n          }\n        });\n      });\n    };\n  };\n  map = function(f) {\n    return function(xs) {\n      return LazyList(function() {\n        var iter;\n        iter = lazy(xs)[Symbol.iterator]();\n        return Iterator(function() {\n          var x;\n          if ((x = iter()) !== nil) {\n            return f(x);\n          } else {\n            return nil;\n          }\n        });\n      });\n    };\n  };\n  filter = function(ok) {\n    return function(xs) {\n      return LazyList(function() {\n        var iter;\n        iter = lazy(xs)[Symbol.iterator]();\n        return Iterator(function() {\n          var x;\n          while (!ok(x = iter()) && x !== nil) {\n            null;\n          }\n          return x;\n        });\n      });\n    };\n  };\n  scanl = function(f, r) {\n    return function(xs) {\n      return LazyList(function() {\n        var iter;\n        iter = lazy(xs)[Symbol.iterator]();\n        return Iterator(function() {\n          var got, x;\n          got = r;\n          r = (x = iter()) !== nil ? f(r, x) : nil;\n          return got;\n        });\n      });\n    };\n  };\n  streak = function(n) {\n    return function(xs) {\n      return LazyList(function() {\n        var buf, iter;\n        iter = lazy(xs)[Symbol.iterator]();\n        buf = [];\n        return Iterator(function() {\n          var x;\n          if ((x = iter()) === nil) {\n            return nil;\n          }\n          buf.push(x);\n          if (buf.length > n) {\n            buf.shift(1);\n          }\n          return buf.slice(0);\n        });\n      });\n    };\n  };\n  reverse = function(xs) {\n    var arr;\n    arr = list(lazy(xs));\n    return lazy(arr.reverse());\n  };\n  join = function(xss) {\n    return LazyList(function() {\n      var iter, xs, xs_iter;\n      xs_iter = lazy(xss)[Symbol.iterator]();\n      xs = xs_iter();\n      iter = lazy(xs)[Symbol.iterator]();\n      return Iterator(function() {\n        var x;\n        if ((x = iter()) !== nil) {\n          return x;\n        } else if ((xs = xs_iter()) !== nil) {\n          iter = lazy(xs)[Symbol.iterator]();\n          return iter();\n        } else {\n          return nil;\n        }\n      });\n    });\n  };\n  ref = (function() {\n    var finished, zip, zipWith;\n    finished = function(arr) {\n      var j, len1, x;\n      for (j = 0, len1 = arr.length; j < len1; j++) {\n        x = arr[j];\n        if (x === nil) {\n          return true;\n        }\n      }\n      return false;\n    };\n    zip = function() {\n      var xss;\n      xss = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n      return LazyList(function() {\n        var iters, xs;\n        iters = (function() {\n          var j, len1, results;\n          results = [];\n          for (j = 0, len1 = xss.length; j < len1; j++) {\n            xs = xss[j];\n            results.push(lazy(xs)[Symbol.iterator]());\n          }\n          return results;\n        })();\n        return Iterator(function() {\n          var iter, next;\n          next = (function() {\n            var j, len1, results;\n            results = [];\n            for (j = 0, len1 = iters.length; j < len1; j++) {\n              iter = iters[j];\n              results.push(iter());\n            }\n            return results;\n          })();\n          if (finished(next)) {\n            return nil;\n          } else {\n            return next;\n          }\n        });\n      });\n    };\n    zipWith = function(f) {\n      return function() {\n        var xss;\n        xss = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n        return LazyList(function() {\n          var iters, xs;\n          iters = (function() {\n            var j, len1, results;\n            results = [];\n            for (j = 0, len1 = xss.length; j < len1; j++) {\n              xs = xss[j];\n              results.push(lazy(xs)[Symbol.iterator]());\n            }\n            return results;\n          })();\n          return Iterator(function() {\n            var iter, next;\n            next = (function() {\n              var j, len1, results;\n              results = [];\n              for (j = 0, len1 = iters.length; j < len1; j++) {\n                iter = iters[j];\n                results.push(iter());\n              }\n              return results;\n            })();\n            if (finished(next)) {\n              return nil;\n            } else {\n              return f.apply(null, next);\n            }\n          });\n        });\n      };\n    };\n    return {\n      zip: zip,\n      zipWith: zipWith\n    };\n  })(), zip = ref.zip, zipWith = ref.zipWith;\n  cartProd = (function() {\n    var apply_vector, inc_vector;\n    inc_vector = function(limits) {\n      var len_minus_1;\n      len_minus_1 = limits.length - 1;\n      return function(vec) {\n        var i;\n        i = len_minus_1;\n        while (!(++vec[i] < limits[i] || i <= 0)) {\n          vec[i--] = 0;\n        }\n        return vec;\n      };\n    };\n    apply_vector = function(space) {\n      var len;\n      len = space.length;\n      return function(vec) {\n        var i, j, ref1, results;\n        results = [];\n        for (i = j = 0, ref1 = len; 0 <= ref1 ? j < ref1 : j > ref1; i = 0 <= ref1 ? ++j : --j) {\n          results.push(space[i][vec[i]]);\n        }\n        return results;\n      };\n    };\n    return function() {\n      var xss;\n      xss = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n      return LazyList(function() {\n        var get_value, i, inc, j, len, len1, limits, v, xs;\n        xss = (function() {\n          var j, len1, results;\n          results = [];\n          for (j = 0, len1 = xss.length; j < len1; j++) {\n            xs = xss[j];\n            results.push(list(xs));\n          }\n          return results;\n        })();\n        limits = (function() {\n          var j, ref1, results;\n          results = [];\n          for (i = j = 0, ref1 = xss.length; 0 <= ref1 ? j < ref1 : j > ref1; i = 0 <= ref1 ? ++j : --j) {\n            results.push(xss[i].length);\n          }\n          return results;\n        })();\n        for (j = 0, len1 = limits.length; j < len1; j++) {\n          len = limits[j];\n          if (len === 0) {\n            return nil;\n          }\n        }\n        inc = inc_vector(limits);\n        get_value = apply_vector(xss);\n        v = (function() {\n          var o, ref1, results;\n          results = [];\n          for (i = o = 0, ref1 = xss.length; 0 <= ref1 ? o < ref1 : o > ref1; i = 0 <= ref1 ? ++o : --o) {\n            results.push(0);\n          }\n          return results;\n        })();\n        return Iterator(function() {\n          var r;\n          if (v[0] < limits[0]) {\n            r = get_value(v);\n            inc(v);\n            return r;\n          } else {\n            return nil;\n          }\n        });\n      });\n    };\n  })();\n  list = function(xs) {\n    var it, n, results, results1, x;\n    if (xs instanceof Array) {\n      return xs;\n    } else if (typeof xs === 'function') {\n      it = xs[Symbol.iterator]();\n      results = [];\n      while ((x = it()) !== nil) {\n        results.push(x);\n      }\n      return results;\n    } else if (xs[Symbol.iterator] != null) {\n      it = lazy(xs)[Symbol.iterator]();\n      results1 = [];\n      while ((x = it()) !== nil) {\n        results1.push(x);\n      }\n      return results1;\n    } else if (typeof xs === 'number') {\n      n = xs;\n      return function(xs) {\n        return list(take(n)(xs));\n      };\n    } else {\n      throw Error('list(xs): xs is neither LazyList nor Array');\n    }\n  };\n  last = function(xs) {\n    var iter, r, ref1, x;\n    if (xs[Symbol.iterator] == null) {\n      return (ref1 = xs[xs.length - 1]) != null ? ref1 : nil;\n    } else {\n      iter = lazy(xs)[Symbol.iterator]();\n      r = nil;\n      while ((x = iter()) !== nil) {\n        r = x;\n      }\n      return r;\n    }\n  };\n  length = function(xs) {\n    var iter, r, x;\n    if (xs[Symbol.iterator] == null) {\n      return xs.length;\n    } else {\n      iter = lazy(xs)[Symbol.iterator]();\n      r = 0;\n      while ((x = iter()) !== nil) {\n        ++r;\n      }\n      return r;\n    }\n  };\n  foldl = function(f, init) {\n    return function(xs) {\n      var iter, r, x;\n      r = init;\n      iter = lazy(xs)[Symbol.iterator]();\n      while ((x = iter()) !== nil) {\n        r = f(r, x);\n      }\n      return r;\n    };\n  };\n  best = function(better) {\n    return function(xs) {\n      var it, iter, r;\n      iter = lazy(xs)[Symbol.iterator]();\n      if ((r = iter()) === nil) {\n        return null;\n      }\n      while ((it = iter()) !== nil) {\n        r = better(it, r) ? it : r;\n      }\n      return r;\n    };\n  };\n  all = function(f) {\n    if (typeof f !== 'function') {\n      f = (function(x) {\n        return x === f;\n      });\n    }\n    return function(xs) {\n      var iter, x;\n      iter = lazy(xs)[Symbol.iterator]();\n      while ((x = iter()) !== nil) {\n        if (!f(x)) {\n          return false;\n        }\n      }\n      return true;\n    };\n  };\n  any = function(f) {\n    var all_not;\n    all_not = all(function(x) {\n      return !f(x);\n    });\n    return function(xs) {\n      return !(all_not(xs));\n    };\n  };\n  brk = function() {\n    return brk;\n  };\n  brk.toString = function() {\n    return 'foreach.break';\n  };\n  foreach = function(xs, callback, fruit) {\n    var iter, x;\n    iter = lazy(xs)[Symbol.iterator]();\n    while ((x = iter()) !== nil) {\n      if (callback(x, fruit) === brk) {\n        break;\n      }\n    }\n    return fruit;\n  };\n  Object.defineProperties(foreach, {\n    \"break\": {\n      writable: false,\n      configurable: false,\n      enumerable: false,\n      value: brk\n    }\n  });\n  return {\n    nil: nil,\n    LazyList: LazyList,\n    Iterator: Iterator,\n    Symbol: Symbol,\n    naturals: naturals,\n    range: range,\n    primes: primes,\n    lazy: lazy,\n    enumerate: enumerate,\n    repeat: repeat,\n    iterate: iterate,\n    random_gen: random_gen,\n    ranged_random_gen: ranged_random_gen,\n    permutation_gen: permutation_gen,\n    cons: cons,\n    concat: concat,\n    map: map,\n    filter: filter,\n    take: take,\n    takeWhile: takeWhile,\n    drop: drop,\n    dropWhile: dropWhile,\n    scanl: scanl,\n    streak: streak,\n    reverse: reverse,\n    join: join,\n    zip: zip,\n    zipWith: zipWith,\n    cartProd: cartProd,\n    list: list,\n    last: last,\n    length: length,\n    foldl: foldl,\n    best: best,\n    all: all,\n    any: any,\n    foreach: foreach\n  };\n};\n\nmodule.exports = this_module({\n  Symbol: typeof Symbol !== \"undefined\" && Symbol !== null ? Symbol : {\n    iterator: 'iter'\n  }\n});\n\n\n},{}]},{},[1])(1)\n});\n\n\n//# sourceMappingURL=lazy.js.map"],"sourceRoot":"/source/"}