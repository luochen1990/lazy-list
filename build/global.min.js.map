{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","global.min.js","global.coffee","lazy.coffee"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length",1,"global","k","lazy","v","this","self","window","./lazy",2,"module","this_module","slice","arg","Iterator","LazyList","Symbol","all","any","best","brk","cartProd","concat","cons","drop","dropWhile","enumerate","filter","foldl","foreach","iterate","join","last","list","map","naturals","nil","permutation_gen","primes","random_gen","range","ranged_random_gen","ref","repeat","reverse","scanl","streak","take","takeWhile","zip","zipWith","iterator","toString","it","next","value","done","args","arguments","stop","start","step","x","p","Infinity","arr","Array","keys","Object","init","status","hash","Math","sin","floor","opts","seed","random","next_permutation","m","ref1","ls","json","xs","c","iter","ok","finished","j","prevx","ws","xs_unused","got","buf","push","shift","xss","xs_iter","len1","iters","results","apply","apply_vector","inc_vector","limits","len_minus_1","vec","space","len","get_value","inc","results1","better","all_not","callback","fruit","defineProperties","break","writable","configurable","enumerable"],"mappings":"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","file":"global.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",null,"lazy = require('./lazy')\nglobal[k] = v for k, v of lazy\n","this_module = ({Symbol}) ->\n\n\t# LazyList definition: nil, LazyList, Iterator,\n\n\tLazyList = (f) -> # construct a LazyList from a function.\n\t\tf[Symbol.iterator] = -> f()\n\t\tf.toString = -> \"LazyList\"\n\t\treturn f\n\n\tnil = LazyList -> nil # xs is empty <==> xs is nil or xs() is nil or xs()() is nil... <==> last xs is nil\n\tnil.toString = -> 'nil'\n\n\tIterator = (it) -> # construct an Iterator(which is a function with status) from a function.\n\t\tit.next = ->\n\t\t\tr = it()\n\t\t\t{value: r, done: r == nil}\n\t\tit.toString = -> \"Iterator\"\n\t\treturn it\n\n\t# LazyList constants: naturals, range, primes,\n\n\tnaturals =\n\t\tLazyList ->\n\t\t\ti = -1\n\t\t\tIterator ->\n\t\t\t\t++i\n\n\trange = (args...) ->\n\t\tif args.length == 0\n\t\t\tnaturals\n\t\telse if args.length == 1\n\t\t\tLazyList ->\n\t\t\t\t[stop] = args\n\t\t\t\ti = -1\n\t\t\t\tIterator ->\n\t\t\t\t\tif ++i < stop then i else nil\n\t\telse if args.length == 2\n\t\t\tLazyList ->\n\t\t\t\t[start, stop] = args\n\t\t\t\tif start < stop\n\t\t\t\t\ti = start - 1\n\t\t\t\t\tIterator ->\n\t\t\t\t\t\tif ++i < stop then i else nil\n\t\t\t\telse\n\t\t\t\t\ti = start + 1\n\t\t\t\t\tIterator ->\n\t\t\t\t\t\tif --i > stop then i else nil\n\t\telse\n\t\t\tLazyList ->\n\t\t\t\t[start, stop, step] = args\n\t\t\t\tthrow 'ERR IN range(): YOU ARE CREATING AN UNLIMITTED RANGE' if stop != start and (stop - start) * step < 0\n\t\t\t\ti = start - step\n\t\t\t\tif start < stop\n\t\t\t\t\tIterator ->\n\t\t\t\t\t\tif (i += step) < stop then i else nil\n\t\t\t\telse\n\t\t\t\t\tIterator ->\n\t\t\t\t\t\tif (i += step) > stop then i else nil\n\n\tprimes = LazyList -> do\n\t\tfilter((x) -> all((p) -> x % p != 0) takeWhile((p) -> p * p <= x) range(2, Infinity)) range(2, Infinity)\n\n\t# LazyList producers: lazy, enumerate, iterate, random_gen, ranged_random_gen, permutation_gen,\n\n\tlazy = (arr) -> #make a LazyList from Function/LazyList/ES6Lazy/Array/String\n\t\tif typeof arr is 'function'\n\t\t\tif arr[Symbol.iterator]? #arr is LazyList\n\t\t\t\tarr\n\t\t\telse #arr is Function\n\t\t\t\tLazyList arr\n\t\telse if arr[Symbol.iterator]? #arr is ES6Lazy\n\t\t\tLazyList ->\n\t\t\t\tit = arr[Symbol.iterator]()\n\t\t\t\tIterator ->\n\t\t\t\t\tr = it.next()\n\t\t\t\t\tif r.done then nil else r.value\n\t\telse #arr is Array or String\n\t\t\tLazyList ->\n\t\t\t\ti = -1\n\t\t\t\tIterator ->\n\t\t\t\t\ti += 1\n\t\t\t\t\tif i < arr.length\n\t\t\t\t\t\tarr[i]\n\t\t\t\t\telse\n\t\t\t\t\t\tnil\n\n\tenumerate = (it) -> # Iterator with index(with key for object)\n\t\tif it[Symbol.iterator]? or it instanceof Array\n\t\t\tzip(naturals, it)\n\t\telse\n\t\t\tLazyList ->\n\t\t\t\tkeys = Object.keys(it)\n\t\t\t\ti = -1\n\t\t\t\tIterator ->\n\t\t\t\t\tif ++i < keys.length then [(k = keys[i]), it[k]] else nil\n\n\trepeat = (x) -> # repeat x\n\t\tLazyList ->\n\t\t\tIterator ->\n\t\t\t\tx\n\n\titerate = (next, init) -> #function next should not change it's argument\n\t\tLazyList ->\n\t\t\tstatus = init\n\t\t\tIterator ->\n\t\t\t\tlast = status\n\t\t\t\tstatus = next status\n\t\t\t\treturn last\n\n\trandom_gen = do ->\n\t\thash = (x) ->\n\t\t\tx = Math.sin(x) * 1e4\n\t\t\tx - Math.floor(x)\n\t\t(opts) ->\n\t\t\tseed = hash(opts?.seed ? Math.random())\n\t\t\titerate hash, seed\n\n\tranged_random_gen = (range, opts) ->\n\t\tseed = opts?.seed ? Math.random()\n\t\tmap((x) -> Math.floor(x * range)) random_gen(seed: seed)\n\n\tpermutation_gen = do ->\n\t\tnext_permutation = (x) ->\n\t\t\tx = x[...]\n\t\t\tl = x.length - 1\n\t\t\t--l while l >= 1 and x[l] <= x[l - 1]\n\n\t\t\tif (l != 0)\n\t\t\t\tm = x.length - 1\n\t\t\t\t--m while m > l - 1 and x[m] <= x[l - 1]\n\t\t\t\t[x[m], x[l - 1]] = [x[l - 1], x[m]]\n\n\t\t\tr = x.length - 1\n\t\t\twhile(l < r)\n\t\t\t\t[x[l], x[r]] = [x[r], x[l]]\n\t\t\t\t++l\n\t\t\t\t--r\n\t\t\treturn x\n\n\t\t(arr) ->\n\t\t\tif arr.length == 0 then nil else\n\t\t\t\tcons(arr[...]) takeWhile((ls) -> json(ls) != json(arr)) drop(1) iterate(next_permutation, arr)\n\n\t# LazyList decorators: take, takeWhile, drop, dropWhile, cons, concat, map, filter, scanl, streak, reverse,\n\n\ttake = (n) ->\n\t\t(xs) ->\n\t\t\tLazyList ->\n\t\t\t\titer = lazy(xs)[Symbol.iterator]()\n\t\t\t\tc = -1\n\t\t\t\tIterator ->\n\t\t\t\t\tif ++c < n then iter() else nil\n\n\ttakeWhile = (ok) ->\n\t\t(xs) ->\n\t\t\tLazyList ->\n\t\t\t\titer = lazy(xs)[Symbol.iterator]()\n\t\t\t\tIterator ->\n\t\t\t\t\tif (x = iter()) isnt nil and ok(x) then x else nil\n\n\tdrop = (n) ->\n\t\t(xs) ->\n\t\t\tLazyList ->\n\t\t\t\titer = lazy(xs)[Symbol.iterator]()\n\t\t\t\tfinished = false\n\t\t\t\t(finished or= (iter() is nil); break if finished) for i in [0...n]\n\t\t\t\tif finished then (-> nil) else iter\n\n\tdropWhile = (ok) ->\n\t\t(xs) ->\n\t\t\tLazyList ->\n\t\t\t\titer = lazy(xs)[Symbol.iterator]()\n\t\t\t\tnull while ok(x = iter()) and x isnt nil\n\t\t\t\tIterator ->\n\t\t\t\t\t[prevx, x] = [x, iter()]\n\t\t\t\t\treturn prevx\n\n\tcons = (x) ->\n\t\t(xs) ->\n\t\t\tLazyList ->\n\t\t\t\titer = null\n\t\t\t\tIterator ->\n\t\t\t\t\tif iter is null\n\t\t\t\t\t\titer = lazy(xs)[Symbol.iterator]()\n\t\t\t\t\t\treturn x\n\t\t\t\t\telse\n\t\t\t\t\t\treturn iter()\n\n\tconcat = (ws) ->\n\t\t(xs) ->\n\t\t\tLazyList ->\n\t\t\t\txs_unused = true\n\t\t\t\titer = lazy(ws)[Symbol.iterator]()\n\t\t\t\tIterator ->\n\t\t\t\t\tif xs_unused\n\t\t\t\t\t\tif (x = iter()) isnt nil\n\t\t\t\t\t\t\treturn x\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\titer = lazy(xs)[Symbol.iterator]()\n\t\t\t\t\t\t\txs_unused = false\n\t\t\t\t\t\t\treturn iter()\n\t\t\t\t\telse\n\t\t\t\t\t\treturn iter()\n\n\tmap = (f) ->\n\t\t(xs) ->\n\t\t\tLazyList ->\n\t\t\t\titer = lazy(xs)[Symbol.iterator]()\n\t\t\t\tIterator ->\n\t\t\t\t\tif (x = iter()) isnt nil then f(x) else nil\n\n\tfilter = (ok) ->\n\t\t(xs) ->\n\t\t\tLazyList ->\n\t\t\t\titer = lazy(xs)[Symbol.iterator]()\n\t\t\t\tIterator ->\n\t\t\t\t\tnull while not ok(x = iter()) and x isnt nil\n\t\t\t\t\treturn x\n\n\tscanl = (f, r) ->\n\t\t(xs) ->\n\t\t\tLazyList ->\n\t\t\t\titer = lazy(xs)[Symbol.iterator]()\n\t\t\t\tIterator ->\n\t\t\t\t\tgot = r\n\t\t\t\t\tr = if (x = iter()) isnt nil then f(r, x) else nil\n\t\t\t\t\treturn got\n\n\tstreak = (n) ->\n\t\t(xs) ->\n\t\t\tLazyList ->\n\t\t\t\titer = lazy(xs)[Symbol.iterator]()\n\t\t\t\tbuf = []\n\t\t\t\tIterator ->\n\t\t\t\t\treturn nil if (x = iter()) is nil\n\t\t\t\t\tbuf.push(x)\n\t\t\t\t\tbuf.shift(1) if buf.length > n\n\t\t\t\t\treturn buf[...]\n\n\treverse = (xs) ->\n\t\tarr = list lazy(xs)\n\t\treturn lazy arr.reverse()\n\n\t# LazyList combiners: join, zip, zipWith, cartProd,\n\n\tjoin = (xss) ->\n\t\tLazyList ->\n\t\t\txs_iter = lazy(xss)[Symbol.iterator]()\n\t\t\txs = xs_iter()\n\t\t\titer = lazy(xs)[Symbol.iterator]()\n\t\t\tIterator ->\n\t\t\t\tif (x = iter()) isnt nil\n\t\t\t\t\treturn x\n\t\t\t\telse if (xs = xs_iter()) isnt nil\n\t\t\t\t\titer = lazy(xs)[Symbol.iterator]()\n\t\t\t\t\treturn iter()\n\t\t\t\telse\n\t\t\t\t\treturn nil\n\n\t{zip, zipWith} = do ->\n\t\tfinished = (arr) ->\n\t\t\tfor x in arr\n\t\t\t\treturn true if x is nil\n\t\t\treturn false\n\n\t\tzip = (xss...) ->\n\t\t\tLazyList ->\n\t\t\t\titers = (lazy(xs)[Symbol.iterator]() for xs in xss)\n\t\t\t\tIterator ->\n\t\t\t\t\tnext = (iter() for iter in iters)\n\t\t\t\t\tif finished(next)\n\t\t\t\t\t\treturn nil\n\t\t\t\t\telse\n\t\t\t\t\t\treturn next\n\n\t\tzipWith = (f) -> (xss...) ->\n\t\t\tLazyList ->\n\t\t\t\titers = (lazy(xs)[Symbol.iterator]() for xs in xss)\n\t\t\t\tIterator ->\n\t\t\t\t\tnext = (iter() for iter in iters)\n\t\t\t\t\tif finished(next)\n\t\t\t\t\t\treturn nil\n\t\t\t\t\telse\n\t\t\t\t\t\treturn f(next...)\n\n\t\treturn {zip, zipWith}\n\n\tcartProd = do -> # cartesian product\n\t\tinc_vector = (limits) ->\n\t\t\tlen_minus_1 = limits.length - 1\n\t\t\t(vec) ->\n\t\t\t\ti = len_minus_1\n\t\t\t\tvec[i--] = 0 until ++vec[i] < limits[i] or i <= 0\n\t\t\t\treturn vec\n\n\t\tapply_vector = (space) ->\n\t\t\tlen = space.length\n\t\t\t(vec) ->\n\t\t\t\t(space[i][vec[i]] for i in [0...len])\n\n\t\t(xss...) ->\n\t\t\tLazyList ->\n\t\t\t\txss = (list(xs) for xs in xss)\n\t\t\t\tlimits = (xss[i].length for i in [0...xss.length])\n\t\t\t\t(return nil if len is 0) for len in limits\n\t\t\t\tinc = inc_vector(limits)\n\t\t\t\tget_value = apply_vector(xss)\n\t\t\t\tv = (0 for i in [0...xss.length])\n\t\t\t\tIterator ->\n\t\t\t\t\tif v[0] < limits[0] then (r = get_value v; inc v; r) else nil\n\n\t# LazyList consumers: list, last, length, foldl, best, all, any, foreach,\n\n\tlist = (xs) -> #force list elements of the LazyList to get an array\n\t\tif xs instanceof Array\n\t\t\txs\n\t\telse if typeof xs is 'function'\n\t\t\tit = xs[Symbol.iterator]()\n\t\t\t(x while (x = it()) isnt nil)\n\t\telse if xs[Symbol.iterator]?\n\t\t\tit = lazy(xs)[Symbol.iterator]()\n\t\t\t(x while (x = it()) isnt nil)\n\t\telse if typeof xs is 'number'\n\t\t\tn = xs\n\t\t\t(xs) -> list take(n) xs\n\t\telse\n\t\t\tthrow Error 'list(xs): xs is neither LazyList nor Array'\n\n\tlast = (xs) -> #returns nil if xs is empty\n\t\tif not xs[Symbol.iterator]? then xs[xs.length - 1] ? nil else\n\t\t\titer = lazy(xs)[Symbol.iterator]()\n\t\t\tr = nil\n\t\t\tr = x while (x = iter()) isnt nil\n\t\t\treturn r\n\n\tlength = (xs) ->\n\t\tif not xs[Symbol.iterator]? then xs.length else\n\t\t\titer = lazy(xs)[Symbol.iterator]()\n\t\t\tr = 0\n\t\t\t++r while (x = iter()) isnt nil\n\t\t\treturn r\n\n\tfoldl = (f, init) ->\n\t\t(xs) ->\n\t\t\tr = init\n\t\t\titer = lazy(xs)[Symbol.iterator]()\n\t\t\tr = f(r, x) while (x = iter()) isnt nil\n\t\t\treturn r\n\n\tbest = (better) ->\n\t\t(xs) ->\n\t\t\titer = lazy(xs)[Symbol.iterator]()\n\t\t\treturn null if (r = iter()) is nil\n\t\t\twhile (it = iter()) isnt nil\n\t\t\t\tr = if better(it, r) then it else r\n\t\t\treturn r\n\n\tall = (f) ->\n\t\tf = ((x) -> x is f) if typeof(f) isnt 'function'\n\t\t(xs) ->\n\t\t\titer = lazy(xs)[Symbol.iterator]()\n\t\t\twhile (x = iter()) isnt nil\n\t\t\t\treturn false if not f(x)\n\t\t\treturn true\n\n\tany = (f) ->\n\t\tall_not = all (x) -> not f(x)\n\t\t(xs) -> not (all_not xs)\n\n\tbrk = -> brk\n\tbrk.toString = -> 'foreach.break'\n\n\tforeach = (xs, callback, fruit) ->\n\t\titer = lazy(xs)[Symbol.iterator]()\n\t\twhile (x = iter()) isnt nil\n\t\t\tbreak if callback(x, fruit) is brk\n\t\tfruit\n\n\tObject.defineProperties foreach,\n\t\tbreak:\n\t\t\twritable: false\n\t\t\tconfigurable: false\n\t\t\tenumerable: false\n\t\t\tvalue: brk\n\n\treturn {\n\t\t# LazyList definition\n\t\tnil, LazyList, Iterator, Symbol,\n\n\t\t# LazyList constants\n\t\tnaturals, range, primes,\n\n\t\t# LazyList producers\n\t\tlazy, enumerate, repeat, iterate, random_gen, ranged_random_gen, permutation_gen,\n\n\t\t# LazyList decorators\n\t\tcons, concat, map, filter, take, takeWhile, drop, dropWhile, scanl, streak, reverse,\n\n\t\t# LazyList combiners\n\t\tjoin, zip, zipWith, cartProd,\n\n\t\t# LazyList consumers\n\t\tlist, last, length, foldl, best, all, any, foreach,\n\t}\n\nmodule.exports = this_module\n\tSymbol: Symbol ? {iterator: 'iter'}\n"],"sourceRoot":"/source/"}