{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","global.min.js","global.coffee","lazy.coffee"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length",1,"global","k","lazy","v","this","self","window","./lazy",2,"module","this_module","slice","arg","Iterator","LazyList","Symbol","all","any","best","brk","cartProd","concat","cons","drop","dropWhile","enumerate","filter","foldl","foreach","iterate","last","list","map","naturals","nil","permutation_gen","primes","random_gen","range","ranged_random_gen","ref","repeat","reverse","scanl","streak","take","takeWhile","zip","zipWith","iterator","toString","it","next","value","done","args","arguments","stop","start","step","x","p","Infinity","arr","Array","keys","Object","init","status","hash","Math","sin","floor","opts","seed","random","next_permutation","m","ref1","ls","json","xs","c","iter","ok","finished","j","prevx","got","buf","push","shift","copy","xss","current_index","len1","iters","results","apply","apply_vector","inc_vector","limits","len_minus_1","vec","space","len","get_value","inc","results1","better","all_not","callback","fruit","defineProperties","break","writable","configurable","enumerable"],"mappings":"CAAA,QAAAA,GAAAC,EAAAC,EAAAC,GAAA,QAAAC,GAAAC,EAAAC,GAAA,IAAAJ,EAAAG,GAAA,CAAA,IAAAJ,EAAAI,GAAA,CAAA,GAAAE,GAAA,kBAAAC,UAAAA,OAAA,KAAAF,GAAAC,EAAA,MAAAA,GAAAF,GAAA,EAAA,IAAAI,EAAA,MAAAA,GAAAJ,GAAA,EAAA,IAAAK,GAAA,GAAAC,OAAA,uBAAAN,EAAA,IAAA,MAAAK,GAAAE,KAAA,mBAAAF,EAAA,GAAAG,GAAAX,EAAAG,IAAAS,WAAAb,GAAAI,GAAA,GAAAU,KAAAF,EAAAC,QAAA,SAAAd,GAAA,GAAAE,GAAAD,EAAAI,GAAA,GAAAL,EAAA,OAAAI,GAAAF,EAAAA,EAAAF,IAAAa,EAAAA,EAAAC,QAAAd,EAAAC,EAAAC,EAAAC,GAAA,MAAAD,GAAAG,GAAAS,QAAA,IAAA,GAAAL,GAAA,kBAAAD,UAAAA,QAAAH,EAAA,EAAAA,EAAAF,EAAAa,OAAAX,IAAAD,EAAAD,EAAAE,GAAA,OAAAD,KAAAa,GAAA,SAAAT,ICCA,SAAWU,GCDX,GAAAC,GAAAC,EAAAC,CAAAD,GAAOZ,EAAQ,SACf,KAAAW,IAAAC,GDMEC,EAAID,EAAKD,GCNXD,EAAOC,GAAKE,IDYTN,KAAKO,KAAuB,mBAAXJ,QAAyBA,OAAyB,mBAATK,MAAuBA,KAAyB,mBAAXC,QAAyBA,aAExHC,SAAS,IAAIC,GAAG,SAASlB,EAAQmB,GEfpC,GAAAC,GAAAC,KAAAA,KAAAD,GAAc,SAACE,GAId,GAAAC,GAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA5B,EAAAJ,EAAAiC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,CA4WA,OAhXejC,GAADH,EAACG,OAIfD,EAAW,SAACtB,GAGX,MAFAA,GAAEuB,EAAOkC,UAAY,WFmBjB,MEnBoBzD,MACxBA,EAAE0D,SAAW,WFqBT,MErBY,YACT1D,GAER0C,EAAMpB,EAAS,WFuBZ,MEvBeoB,KAClBA,EAAIgB,SAAW,WFyBZ,MEzBe,OAElBrC,EAAW,SAACsC,GAKX,MAJAA,GAAGC,KAAO,WACT,GAAAnE,EF2BG,OE3BHA,GAAIkE,KACHE,MAAOpE,EAAGqE,KAAMrE,IAAKiD,IACvBiB,EAAGD,SAAW,WF+BV,ME/Ba,YACVC,GAIRlB,EACCnB,EAAS,WACR,GAAAvB,EF+BC,OE/BDA,GAAI,GACJsB,EAAS,WF+BN,QE9BFtB,MAEH+C,EAAQ,WACP,GAAAiB,EAAA,OADQA,GAAA,GAAAC,UAAA1D,OAAAa,EAAAd,KAAA2D,UAAA,MACU,IAAfD,EAAKzD,OACPmC,EAEAnB,EADsB,IAAfyC,EAAKzD,OACH,WACR,GAAAP,GAAAkE,CFoCI,OEpCHA,GAAQF,EAAA,GACThE,EAAI,GACJsB,EAAS,WACR,QAAGtB,EAAMkE,EAAUlE,EAAO2C,KACN,IAAfqB,EAAKzD,OACH,WACR,GAAAP,GAAAmE,EAAAD,CACA,OADCC,GAAAH,EAAA,GAAOE,EAAAF,EAAA,GACGE,EAARC,GACFnE,EAAImE,EAAQ,EACZ7C,EAAS,WACR,QAAGtB,EAAMkE,EAAUlE,EAAO2C,MAE3B3C,EAAImE,EAAQ,EACZ7C,EAAS,WACR,QAAGtB,EAAMkE,EAAUlE,EAAO2C,MAEpB,WACR,GAAA3C,GAAAmE,EAAAC,EAAAF,CACA,IADCC,EAAAH,EAAA,GAAOE,EAAAF,EAAA,GAAMI,EAAAJ,EAAA,GACkDE,IAAQC,GAAkC,GAAvBD,EAAOC,GAASC,EAAnG,KAAM,sDAEN,OADApE,GAAImE,EAAQC,EAEX9C,EADU4C,EAARC,EACO,WACR,OAAInE,GAAKoE,GAAQF,EAAUlE,EAAO2C,GAE1B,WACR,OAAI3C,GAAKoE,GAAQF,EAAUlE,EAAO2C,OAEvCE,EAAStB,EAAS,WFsEf,MErEFY,GAAO,SAACkC,GFsEJ,MEtEU5C,GAAI,SAAC6C,GFuEb,MEvEmBD,GAAIC,IAAK,IAAGf,EAAU,SAACe,GFyE1C,MEzEyDD,IAATC,EAAIA,IAAQvB,EAAM,EAAGwB,SAAWxB,EAAM,EAAGwB,UAIhG5D,EAAO,SAAC6D,GACP,MAAiB,kBAAdA,GACC,MAAAA,EAAAhD,EAAAkC,UACFc,EAEAjD,EAASiD,GAEVjD,EADO,MAAAiD,EAAAhD,EAAAkC,UACE,WACR,GAAAE,EF4EI,OE5EJA,GAAKY,EAAIhD,EAAOkC,YAChBpC,EAAS,WACR,GAAA5B,EACA,OADAA,GAAIkE,EAAGC,OACJnE,EAAEqE,KAAUpB,EAASjD,EAAEoE,SAEnB,WACR,GAAA9D,EFoFI,OEpFJA,GAAI,GACJsB,EAAS,WAER,MADAtB,IAAK,EACFA,EAAIwE,EAAIjE,OACViE,EAAIxE,GAEJ2C,OAELT,EAAY,SAAC0B,GACZ,MAAG,OAAAA,EAAApC,EAAAkC,WAAwBE,YAAca,OACxCjB,EAAId,EAAUkB,GAEdrC,EAAS,WACR,GAAAvB,GAAA0E,CF0FI,OE1FJA,GAAOC,OAAOD,KAAKd,GACnB5D,EAAI,GACJsB,EAAS,WACR,GAAAZ,EAAA,SAAGV,EAAM0E,EAAKnE,QAAcG,EAAIgE,EAAK1E,GAAK4D,EAAGlD,IAASiC,OAE1DO,EAAS,SAACmB,GFiGP,MEhGF9C,GAAS,WFiGL,MEhGHD,GAAS,WFiGJ,MEhGJ+C,QAEH/B,EAAU,SAACuB,EAAMe,GFmGd,MElGFrD,GAAS,WACR,GAAAsD,EFoGG,OEpGHA,GAASD,EACTtD,EAAS,WACR,GAAAiB,EAEA,OAFAA,GAAOsC,EACPA,EAAShB,EAAKgB,GACPtC,OAEVO,EAAgB,WACf,GAAAgC,EF2GE,OE3GFA,GAAO,SAACT,GFyGJ,MExGHA,GAAkB,IAAdU,KAAKC,IAAIX,GACbA,EAAIU,KAAKE,MAAMZ,IAChB,SAACa,GACA,GAAAjC,GAAAkC,CF0GG,OE1GHA,GAAOL,EAAA,OAAA7B,EAAA,MAAAiC,EAAAA,EAAAC,KAAA,QAAAlC,EAAkB8B,KAAKK,UAC9B9C,EAAQwC,EAAMK,OAEhBnC,EAAoB,SAACD,EAAOmC,GAC3B,GAAAjC,GAAAkC,CF4GE,OE5GFA,GAAA,OAAAlC,EAAA,MAAAiC,EAAAA,EAAAC,KAAA,QAAAlC,EAAoB8B,KAAKK,SACzB3C,EAAI,SAAC4B,GF4GD,ME5GOU,MAAKE,MAAMZ,EAAItB,KAAQD,GAAWqC,KAAMA,MAEpDvC,EAAqB,WACpB,GAAAyC,EFsIE,OEtIFA,GAAmB,SAAChB,GACnB,GAAAjE,GAAAkF,EAAA5F,EAAAuD,EAAAsC,CAEI,KAFJlB,EAAIA,EAAEjD,MAAA,GACNhB,EAAIiE,EAAE9D,OAAS,EACLH,GAAK,GAAMiE,EAAEjE,IAAMiE,EAAEjE,EAAI,MAAnCA,CAEA,IAAS,IAALA,EAAJ,CAEK,IADJkF,EAAIjB,EAAE9D,OAAS,EACL+E,EAAIlF,EAAI,GAAMiE,EAAEiB,IAAMjB,EAAEjE,EAAI,MAAtCkF,CACArC,IAAoBoB,EAAEjE,EAAI,GAAIiE,EAAEiB,IAA/BjB,EAAEiB,GAAArC,EAAA,GAAIoB,EAAEjE,EAAI,GAAJ6C,EAAA,GAGV,IADAvD,EAAI2E,EAAE9D,OAAS,EACLb,EAAJU,GACLmF,GAAgBlB,EAAE3E,GAAI2E,EAAEjE,IAAvBiE,EAAEjE,GAAAmF,EAAA,GAAIlB,EAAE3E,GAAA6F,EAAA,KACTnF,IACAV,CACD,OAAO2E,IAER,SAACG,GACA,MAAiB,KAAdA,EAAIjE,OAAiBoC,EACvBb,GAAQ0C,EAAIpD,MAAA,IAAOmC,EAAU,SAACiC,GFwHxB,MExH+BC,MAAKD,KAAOC,KAAKjB,KAAMxC,EAAK,GAAGM,EAAQ+C,EAAkBb,UAIjGlB,EAAO,SAAC7D,GF0HL,MEzHF,UAACiG,GF0HG,MEzHHnE,GAAS,WACR,GAAAoE,GAAAC,CF4HI,OE5HJA,IAAwB,kBAAbF,GAA6BA,EAAQ/E,EAAK+E,IAAKlE,EAAOkC,YACjEiC,EAAI,GACJrE,EAAS,WACR,QAAGqE,EAAMlG,EAAOmG,IAAYjD,QAEhCY,EAAY,SAACsC,GFkIV,MEjIF,UAACH,GFkIG,MEjIHnE,GAAS,WACR,GAAAqE,EFmII,OEnIJA,IAAwB,kBAAbF,GAA6BA,EAAQ/E,EAAK+E,IAAKlE,EAAOkC,YACjEpC,EAAS,WACR,GAAA+C,EAAA,QAAIA,EAAIuB,OAAajD,GAAQkD,EAAGxB,GAAQA,EAAO1B,QAEnDX,EAAO,SAACvC,GF2IL,ME1IF,UAACiG,GF2IG,ME1IHnE,GAAS,WACR,GAAAuE,GAAA9F,EAAA4F,EAAAG,EAAA9C,CAEA,KAFA2C,GAAwB,kBAAbF,GAA6BA,EAAQ/E,EAAK+E,IAAKlE,EAAOkC,YACjEoC,GAAW,EACgD9F,EAAA+F,EAAA,EAAA9C,EAAAxD,GAAAwD,GAAA,EAAAA,EAAA8C,EAAAA,EAAA9C,KAA1D6C,IAAAA,EAAcF,MAAUjD,IAAemD,GAAmB9F,EAAAiD,GAAA,IAAA8C,IAAAA,GAC3D,MAAGD,GAAe,WFkJV,MElJanD,IAAUiD,MAElC3D,EAAY,SAAC4D,GFyJV,MExJF,UAACH,GFyJG,MExJHnE,GAAS,WACR,GAAAqE,GAAAvB,CACK,KADLuB,GAAwB,kBAAbF,GAA6BA,EAAQ/E,EAAK+E,IAAKlE,EAAOkC,YACtDmC,EAAGxB,EAAIuB,MAAYvB,IAAO1B,IF4JjC,ME3JJrB,GAAS,WACR,GAAA0E,GAAA/C,CACA,OADAA,IAAcoB,EAAGuB,KAAhBI,EAAA/C,EAAA,GAAOoB,EAAApB,EAAA,GACD+C,QAEXjE,EAAO,SAACsC,GFgKL,ME/JF,UAACqB,GFgKG,ME/JHnE,GAAS,WACR,GAAAqE,EFiKI,OEjKJA,GAAO,KACPtE,EAAS,WACR,MAAW,QAARsE,GACFA,GAAwB,kBAAbF,GAA6BA,EAAQ/E,EAAK+E,IAAKlE,EAAOkC,YAC1DW,GAEAuB,UAEZnD,EAAM,SAACxC,GFqKJ,MEpKF,UAACyF,GFqKG,MEpKHnE,GAAS,WACR,GAAAqE,EFsKI,OEtKJA,IAAwB,kBAAbF,GAA6BA,EAAQ/E,EAAK+E,IAAKlE,EAAOkC,YACjEpC,EAAS,WACR,GAAA+C,EAAA,QAAIA,EAAIuB,OAAajD,EAAS1C,EAAEoE,GAAQ1B,QAE5CR,EAAS,SAAC0D,GF8KP,ME7KF,UAACH,GF8KG,ME7KHnE,GAAS,WACR,GAAAqE,EF+KI,OE/KJA,IAAwB,kBAAbF,GAA6BA,EAAQ/E,EAAK+E,IAAKlE,EAAOkC,YACjEpC,EAAS,WACH,IAAL,GAAA+C,IAAWwB,EAAOxB,EAAIuB,MAAYvB,IAAO1B,IACzC,MAAO0B,SAEXjB,EAAQ,SAACnD,EAAGP,GFqLT,MEpLF,UAACgG,GFqLG,MEpLHnE,GAAS,WACR,GAAAqE,EFsLI,OEtLJA,IAAwB,kBAAbF,GAA6BA,EAAQ/E,EAAK+E,IAAKlE,EAAOkC,YACjEpC,EAAS,WACR,GAAA2E,GAAA5B,CAEA,OAFA4B,GAAMvG,EACNA,GAAQ2E,EAAIuB,OAAajD,EAAS1C,EAAEP,EAAG2E,GAAQ1B,EACxCsD,QAEX5C,EAAS,SAAC5D,GF0LP,MEzLF,UAACiG,GF0LG,MEzLHnE,GAAS,WACR,GAAA2E,GAAAN,CF4LI,OE5LJA,IAAwB,kBAAbF,GAA6BA,EAAQ/E,EAAK+E,IAAKlE,EAAOkC,YACjEwC,KACA5E,EAAS,WACR,GAAA+C,EAAA,QAAeA,EAAIuB,OAAWjD,EAAvBA,GACPuD,EAAIC,KAAK9B,GACO6B,EAAI3F,OAASd,GAA7ByG,EAAIE,MAAM,GACHF,EAAI9E,MAAA,UAEf+B,EAAU,SAACuC,GACV,GAAAlB,EACA,OADAA,GAAsB,kBAAbkB,GAA6BlD,EAAKkD,GAAQW,KAAKX,GACjD/E,EAAK6D,EAAIrB,YAIjBrB,EAAS,WACR,GAAAwE,EFmME,OEpMOA,GAAA,GAAArC,UAAA1D,OAAAa,EAAAd,KAAA2D,UAAA,MACT1C,EAAS,WACR,GAAAgF,GAAAX,CFsMG,OEtMHA,IAAW,MAAAU,EAAA,GAAA9E,EAAAkC,UAA8B4C,EAAI,GAAQ3F,EAAK2F,EAAI,KAAK9E,EAAOkC,YAC1E6C,EAAgB,EAChBjF,EAAS,WACR,GAAA+C,EAAA,QAAIA,EAAIuB,OAAajD,EACb0B,IACCkC,EAAkBD,EAAI/F,QAC9BqF,GAAW,MAAAU,EAAAC,GAAA/E,EAAAkC,UAA0C4C,EAAIC,GAAoB5F,EAAK2F,EAAIC,KAAiB/E,EAAOkC,eAGvGf,OAEXM,EAAoB,WACnB,GAAA6C,GAAAtC,EAAAC,CAyBA,OAzBAqC,GAAW,SAACtB,GACX,GAAAuB,GAAAS,EAAAnC,CAAA,KAAA0B,EAAA,EAAAS,EAAAhC,EAAAjE,OAAAiG,EAAAT,EAAAA,IACC,GF0MI1B,EAAIG,EAAIuB,GE1MG1B,IAAK1B,EAApB,OAAO,CACR,QAAO,GAERa,EAAM,WACL,GAAA8C,EFgNG,OEjNGA,GAAA,GAAArC,UAAA1D,OAAAa,EAAAd,KAAA2D,UAAA,MACN1C,EAAS,WACR,GAAAkF,GAAAf,CF0NI,OE1NJe,GAAA,WFkNM,GAAIV,GAAGS,EAAME,CAEb,KEpNGA,KAAAX,EAAA,EAAAS,EAAAF,EAAA/F,OAAAiG,EAAAT,EAAAA,IFqNDL,EAAKY,EAAIP,GErNRW,EAAAP,MAAiB,kBAAbT,GAA6BA,EAAQ/E,EAAK+E,IAAKlE,EAAOkC,YFwN7D,OAAOgD,MEvNbpF,EAAS,WACR,GAAAsE,GAAA/B,CACA,OADAA,GAAA,WF2NO,GAAIkC,GAAGS,EAAME,CAEb,KE7NCA,KAAAX,EAAA,EAAAS,EAAAC,EAAAlG,OAAAiG,EAAAT,EAAAA,IF8NCH,EAAOa,EAAMV,GE9NdW,EAAAP,KAAAP,IFiOD,OAAOc,MEhOXZ,EAASjC,GACJlB,EAEAkB,OAEXJ,EAAU,SAACxD,GFsOP,MEtOa,YAChB,GAAAqG,EFwOK,OEzOYA,GAAA,GAAArC,UAAA1D,OAAAa,EAAAd,KAAA2D,UAAA,MACjB1C,EAAS,WACR,GAAAkF,GAAAf,CFkPM,OElPNe,GAAA,WF0OQ,GAAIV,GAAGS,EAAME,CAEb,KE5OCA,KAAAX,EAAA,EAAAS,EAAAF,EAAA/F,OAAAiG,EAAAT,EAAAA,IF6OCL,EAAKY,EAAIP,GE7OVW,EAAAP,MAAiB,kBAAbT,GAA6BA,EAAQ/E,EAAK+E,IAAKlE,EAAOkC,YFgP3D,OAAOgD,ME/OfpF,EAAS,WACR,GAAAsE,GAAA/B,CACA,OADAA,GAAA,WFmPS,GAAIkC,GAAGS,EAAME,CAEb,KErPDA,KAAAX,EAAA,EAAAS,EAAAC,EAAAlG,OAAAiG,EAAAT,EAAAA,IFsPGH,EAAOa,EAAMV,GEtPhBW,EAAAP,KAAAP,IFyPC,OAAOc,MExPbZ,EAASjC,GACJlB,EAEA1C,EAAA0G,MAAA,KAAE9C,UAELL,IAAAA,EAAKC,QAAAA,MA1BbD,EAAAP,EAAAO,IAAKC,EAAAR,EAAAQ,QA4BN5B,EAAc,WACb,GAAA+E,GAAAC,CF0RE,OE1RFA,GAAa,SAACC,GACb,GAAAC,EFoQG,OEpQHA,GAAcD,EAAOvG,OAAS,EAC9B,SAACyG,GACA,GAAAhH,EACa,KADbA,EAAI+G,MACeC,EAAMhH,GAAK8G,EAAO9G,IAAW,GAALA,IAA3CgH,EAAIhH,KAAO,CACX,OAAOgH,KAETJ,EAAe,SAACK,GACf,GAAAC,EFyQG,OEzQHA,GAAMD,EAAM1G,OACZ,SAACyG,GACA,GAAAhH,GAAA+F,EAAAR,EAAAmB,CF0QI,KE1QHA,KAA0B1G,EAAA+F,EAAA,EAAAR,EAAA2B,EAAA3B,GAAA,EAAAA,EAAAQ,EAAAA,EAAAR,EAAAvF,EAAAuF,GAAA,IAAAQ,IAAAA,EAA1BW,EAAAP,KAAAc,EAAMjH,GAAGgH,EAAIhH,IF6QV,OAAO0G,KE3Qb,WACC,GAAAJ,EFgRG,OEjRHA,GAAA,GAAArC,UAAA1D,OAAAa,EAAAd,KAAA2D,UAAA,MACA1C,EAAS,WACR,GAAA4F,GAAAnH,EAAAoH,EAAArB,EAAAmB,EAAAV,EAAAM,EAAAlG,EAAA8E,CAEA,KAFAY,EAAA,WFkRM,GAAIP,GAAGS,EAAME,CAEb,KEpRCA,KAAAX,EAAA,EAAAS,EAAAF,EAAA/F,OAAAiG,EAAAT,EAAAA,IFqRCL,EAAKY,EAAIP,GErRVW,EAAAP,KAAA3D,EAAKkD,GFwRN,OAAOgB,MEvRbI,EAAA,WF0RM,GAAIf,GAAGR,EAAMmB,CAEb,KE5RIA,KAAuB1G,EAAA+F,EAAA,EAAAR,EAAAe,EAAA/F,OAAAgF,GAAA,EAAAA,EAAAQ,EAAAA,EAAAR,EAAAvF,EAAAuF,GAAA,IAAAQ,IAAAA,EAAvBW,EAAAP,KAAAG,EAAItG,GAAGO,OF+RX,OAAOmG,ME9RbX,EAAA,EAAAS,EAAAM,EAAAvG,OAAAiG,EAAAT,EAAAA,IAAC,GFiSKmB,EAAMJ,EAAOf,GEjSG,IAAPmB,EAAd,MAAOvE,EFgTJ,OE/SJyE,GAAMP,EAAWC,GACjBK,EAAYP,EAAaN,GACzB1F,EAAA,WFsSM,GAAIhB,GAAG2F,EAAMmB,CAEb,KExSDA,KAAW1G,EAAAJ,EAAA,EAAA2F,EAAAe,EAAA/F,OAAAgF,GAAA,EAAAA,EAAA3F,EAAAA,EAAA2F,EAAAvF,EAAAuF,GAAA,IAAA3F,IAAAA,EAAX8G,EAAAP,KAAA,EF2SC,OAAOO,ME1SbpF,EAAS,WACR,GAAA5B,EAAA,OAAGkB,GAAE,GAAKkG,EAAO,IAASpH,EAAIyH,EAAUvG,GAAGwG,EAAIxG,GAAGlB,GAAQiD,UAI9DH,EAAO,SAACkD,GACP,GAAA9B,GAAAnE,EAAAiH,EAAAW,EAAAhD,CAAA,IAAgB,gBAAbqB,GFuTC,MEtTHjG,GAAIiG,EACJ,SAACA,GFsTI,MEtTGlD,GAAKc,EAAK7D,GAAGiG,IACjB,IAAgB,kBAAbA,GAAH,CF0TD,IEzTH9B,EAAK8B,EAAGlE,EAAOkC,YACZgD,MAAOrC,EAAIT,OAAWjB,GAAxB+D,EAAAP,KAAA9B,EF2TE,OAAOqC,GE1TN,GAAG,MAAAhB,EAAAlE,EAAAkC,UAAH,CF8TD,IE7THE,EAAKjD,EAAK+E,GAAIlE,EAAOkC,YAClB2D,MAAOhD,EAAIT,OAAWjB,GAAxB0E,EAAAlB,KAAA9B,EF+TE,OAAOgD,GE9TN,GAAG3B,YAAcjB,OFgUlB,ME/THiB,EAEA,MAAMxF,OAAM,+CAEdqC,EAAO,SAACmD,GACP,GAAAE,GAAAlG,EAAA6F,EAAAlB,CAAA,IAAO,MAAAqB,EAAAlE,EAAAkC,UFkUH,MAAqC,QAA7B6B,EAAOG,EAAGA,EAAGnF,OAAS,IAAcgF,EElUK5C,CAG9C,KAFNiD,GAAwB,kBAAbF,GAA6BA,EAAQ/E,EAAK+E,IAAKlE,EAAOkC,YACjEhE,EAAIiD,GACS0B,EAAIuB,OAAajD,GAA9BjD,EAAI2E,CACJ,OAAO3E,IAETa,EAAS,SAACmF,GACT,GAAAE,GAAAlG,EAAA2E,CAAA,IAAO,MAAAqB,EAAAlE,EAAAkC,UFwUH,MExU6BgC,GAAGnF,MAG/B,KAFJqF,GAAwB,kBAAbF,GAA6BA,EAAQ/E,EAAK+E,IAAKlE,EAAOkC,YACjEhE,EAAI,GACO2E,EAAIuB,OAAajD,KAA5BjD,CACA,OAAOA,IAET0C,EAAQ,SAACnC,EAAG2E,GF6UT,ME5UF,UAACc,GACA,GAAAE,GAAAlG,EAAA2E,CAEY,KAFZ3E,EAAIkF,EACJgB,GAAwB,kBAAbF,GAA6BA,EAAQ/E,EAAK+E,IAAKlE,EAAOkC,aAC9CW,EAAIuB,OAAajD,GAApCjD,EAAIO,EAAEP,EAAG2E,EACT,OAAO3E,KAETiC,EAAO,SAAC2F,GFiVL,MEhVF,UAAC5B,GACA,GAAA9B,GAAAgC,EAAAlG,CACA,IADAkG,GAAwB,kBAAbF,GAA6BA,EAAQ/E,EAAK+E,IAAKlE,EAAOkC,aACjDhE,EAAIkG,OAAWjD,EAA/B,MAAO,KACP,OAAOiB,EAAKgC,OAAajD,GACxBjD,EAAO4H,EAAO1D,EAAIlE,GAAQkE,EAAQlE,CACnC,OAAOA,KAET+B,EAAM,SAACxB,GF2VJ,ME1VoC,kBAAfA,KAAvBA,EAAI,SAAEoE,GFuVA,MEvVMA,KAAKpE,IACjB,SAACyF,GACA,GAAAE,GAAAvB,CACA,KADAuB,GAAwB,kBAAbF,GAA6BA,EAAQ/E,EAAK+E,IAAKlE,EAAOkC,aAC1DW,EAAIuB,OAAajD,GACvB,IAAgB1C,EAAMoE,GAAtB,OAAO,CACR,QAAO,IAET3C,EAAM,SAACzB,GACN,GAAAsH,EFkWE,OElWFA,GAAU9F,EAAI,SAAC4C,GFgWX,OEhWiBpE,EAAMoE,KAC3B,SAACqB,GFkWG,OElWS6B,EAAQ7B,KAEtB9D,EAAM,WFoWH,MEpWMA,IACTA,EAAI+B,SAAW,WFsWZ,MEtWe,iBAElBtB,EAAU,SAACqD,EAAI8B,EAAUC,GACxB,GAAA7B,GAAAvB,CACA,KADAuB,GAAwB,kBAAbF,GAA6BA,EAAQ/E,EAAK+E,IAAKlE,EAAOkC,aAC1DW,EAAIuB,OAAajD,GACd6E,EAASnD,EAAGoD,KAAU7F,IF2W9B,ME1WF6F,IAED9C,OAAO+C,iBAAiBrF,GACvBsF,SACCC,UAAU,EACVC,cAAc,EACdC,YAAY,EACZhE,MAAOlC,MAIRe,IAAAA,EAAKpB,SAAAA,EAAUD,SAAAA,EAAUE,OAAAA,EAGzBkB,SAAAA,EAAUK,MAAAA,EAAOF,OAAAA,EAGjBlC,KAAAA,EAAMuB,UAAAA,EAAWgB,OAAAA,EAAQZ,QAAAA,EAASQ,WAAAA,EAAYE,kBAAAA,EAAmBJ,gBAAAA,EAGjEb,KAAAA,EAAMU,IAAAA,EAAKN,OAAAA,EAAQmB,KAAAA,EAAMC,UAAAA,EAAWvB,KAAAA,EAAMC,UAAAA,EAAWmB,MAAAA,EAAOC,OAAAA,EAAQF,QAAAA,EAGpErB,OAAAA,EAAQ0B,IAAAA,EAAKC,QAAAA,EAAS5B,SAAAA,EAGtBW,KAAAA,EAAMD,KAAAA,EAAMhC,OAAAA,EAAQ6B,MAAAA,EAAOT,KAAAA,EAAMF,IAAAA,EAAKC,IAAAA,EAAKW,QAAAA,IAjY7CnB,EAoYOb,QAAUc,GAChBK,OAAA,mBAAAA,SAAA,OAAAA,OAAQA,QAAUkC,SAAU,oBFsYlB","file":"global.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",null,"lazy = require('./lazy')\nglobal[k] = v for k, v of lazy\n","this_module = ({Symbol}) ->\n\n\t# LazyList definition: nil, LazyList, Iterator,\n\n\tLazyList = (f) -> # construct a LazyList from a function.\n\t\tf[Symbol.iterator] = -> f()\n\t\tf.toString = -> \"LazyList\"\n\t\treturn f\n\n\tnil = LazyList -> nil # xs is empty <==> xs is nil or xs() is nil or xs()() is nil... <==> last xs is nil\n\tnil.toString = -> 'nil'\n\n\tIterator = (it) -> # construct an Iterator(which is a function with status) from a function.\n\t\tit.next = ->\n\t\t\tr = it()\n\t\t\t{value: r, done: r == nil}\n\t\tit.toString = -> \"Iterator\"\n\t\treturn it\n\n\t# LazyList constants: naturals, range, primes,\n\n\tnaturals =\n\t\tLazyList ->\n\t\t\ti = -1\n\t\t\tIterator ->\n\t\t\t\t++i\n\n\trange = (args...) ->\n\t\tif args.length == 0\n\t\t\tnaturals\n\t\telse if args.length == 1\n\t\t\tLazyList ->\n\t\t\t\t[stop] = args\n\t\t\t\ti = -1\n\t\t\t\tIterator ->\n\t\t\t\t\tif ++i < stop then i else nil\n\t\telse if args.length == 2\n\t\t\tLazyList ->\n\t\t\t\t[start, stop] = args\n\t\t\t\tif start < stop\n\t\t\t\t\ti = start - 1\n\t\t\t\t\tIterator ->\n\t\t\t\t\t\tif ++i < stop then i else nil\n\t\t\t\telse\n\t\t\t\t\ti = start + 1\n\t\t\t\t\tIterator ->\n\t\t\t\t\t\tif --i > stop then i else nil\n\t\telse\n\t\t\tLazyList ->\n\t\t\t\t[start, stop, step] = args\n\t\t\t\tthrow 'ERR IN range(): YOU ARE CREATING AN UNLIMITTED RANGE' if stop != start and (stop - start) * step < 0\n\t\t\t\ti = start - step\n\t\t\t\tif start < stop\n\t\t\t\t\tIterator ->\n\t\t\t\t\t\tif (i += step) < stop then i else nil\n\t\t\t\telse\n\t\t\t\t\tIterator ->\n\t\t\t\t\t\tif (i += step) > stop then i else nil\n\n\tprimes = LazyList -> do\n\t\tfilter((x) -> all((p) -> x % p != 0) takeWhile((p) -> p * p <= x) range(2, Infinity)) range(2, Infinity)\n\n\t# LazyList producers: lazy, enumerate, iterate, random_gen, ranged_random_gen, permutation_gen,\n\n\tlazy = (arr) -> #make a LazyList from Function/LazyList/ES6Lazy/Array/String\n\t\tif typeof arr is 'function'\n\t\t\tif arr[Symbol.iterator]? #arr is LazyList\n\t\t\t\tarr\n\t\t\telse #arr is Function\n\t\t\t\tLazyList arr\n\t\telse if arr[Symbol.iterator]? #arr is ES6Lazy\n\t\t\tLazyList ->\n\t\t\t\tit = arr[Symbol.iterator]()\n\t\t\t\tIterator ->\n\t\t\t\t\tr = it.next()\n\t\t\t\t\tif r.done then nil else r.value\n\t\telse #arr is Array or String\n\t\t\tLazyList ->\n\t\t\t\ti = -1\n\t\t\t\tIterator ->\n\t\t\t\t\ti += 1\n\t\t\t\t\tif i < arr.length\n\t\t\t\t\t\tarr[i]\n\t\t\t\t\telse\n\t\t\t\t\t\tnil\n\n\tenumerate = (it) -> # Iterator with index(with key for object)\n\t\tif it[Symbol.iterator]? or it instanceof Array\n\t\t\tzip(naturals, it)\n\t\telse\n\t\t\tLazyList ->\n\t\t\t\tkeys = Object.keys(it)\n\t\t\t\ti = -1\n\t\t\t\tIterator ->\n\t\t\t\t\tif ++i < keys.length then [(k = keys[i]), it[k]] else nil\n\n\trepeat = (x) -> # repeat x\n\t\tLazyList ->\n\t\t\tIterator ->\n\t\t\t\tx\n\n\titerate = (next, init) -> #function next should not change it's argument\n\t\tLazyList ->\n\t\t\tstatus = init\n\t\t\tIterator ->\n\t\t\t\tlast = status\n\t\t\t\tstatus = next status\n\t\t\t\treturn last\n\n\trandom_gen = do ->\n\t\thash = (x) ->\n\t\t\tx = Math.sin(x) * 1e4\n\t\t\tx - Math.floor(x)\n\t\t(opts) ->\n\t\t\tseed = hash(opts?.seed ? Math.random())\n\t\t\titerate hash, seed\n\n\tranged_random_gen = (range, opts) ->\n\t\tseed = opts?.seed ? Math.random()\n\t\tmap((x) -> Math.floor(x * range)) random_gen(seed: seed)\n\n\tpermutation_gen = do ->\n\t\tnext_permutation = (x) ->\n\t\t\tx = x[...]\n\t\t\tl = x.length - 1\n\t\t\t--l while l >= 1 and x[l] <= x[l - 1]\n\n\t\t\tif (l != 0)\n\t\t\t\tm = x.length - 1\n\t\t\t\t--m while m > l - 1 and x[m] <= x[l - 1]\n\t\t\t\t[x[m], x[l - 1]] = [x[l - 1], x[m]]\n\n\t\t\tr = x.length - 1\n\t\t\twhile(l < r)\n\t\t\t\t[x[l], x[r]] = [x[r], x[l]]\n\t\t\t\t++l\n\t\t\t\t--r\n\t\t\treturn x\n\n\t\t(arr) ->\n\t\t\tif arr.length == 0 then nil else\n\t\t\t\tconcat [arr[...]], takeWhile((ls) -> json(ls) != json(arr)) drop(1) iterate next_permutation, arr\n\n\t# LazyList decorators: take, takeWhile, drop, dropWhile, cons, map, filter, scanl, streak, reverse,\n\n\ttake = (n) ->\n\t\t(xs) ->\n\t\t\tLazyList ->\n\t\t\t\titer = (if typeof xs is 'function' then xs else lazy(xs))[Symbol.iterator]()\n\t\t\t\tc = -1\n\t\t\t\tIterator ->\n\t\t\t\t\tif ++c < n then iter() else nil\n\n\ttakeWhile = (ok) ->\n\t\t(xs) ->\n\t\t\tLazyList ->\n\t\t\t\titer = (if typeof xs is 'function' then xs else lazy(xs))[Symbol.iterator]()\n\t\t\t\tIterator ->\n\t\t\t\t\tif (x = iter()) isnt nil and ok(x) then x else nil\n\n\tdrop = (n) ->\n\t\t(xs) ->\n\t\t\tLazyList ->\n\t\t\t\titer = (if typeof xs is 'function' then xs else lazy(xs))[Symbol.iterator]()\n\t\t\t\tfinished = false\n\t\t\t\t(finished or= (iter() is nil); break if finished) for i in [0...n]\n\t\t\t\tif finished then (-> nil) else iter\n\n\tdropWhile = (ok) ->\n\t\t(xs) ->\n\t\t\tLazyList ->\n\t\t\t\titer = (if typeof xs is 'function' then xs else lazy(xs))[Symbol.iterator]()\n\t\t\t\tnull while ok(x = iter()) and x isnt nil\n\t\t\t\tIterator ->\n\t\t\t\t\t[prevx, x] = [x, iter()]\n\t\t\t\t\treturn prevx\n\n\tcons = (x) ->\n\t\t(xs) ->\n\t\t\tLazyList ->\n\t\t\t\titer = null\n\t\t\t\tIterator ->\n\t\t\t\t\tif iter is null\n\t\t\t\t\t\titer = (if typeof xs is 'function' then xs else lazy(xs))[Symbol.iterator]()\n\t\t\t\t\t\treturn x\n\t\t\t\t\telse\n\t\t\t\t\t\treturn iter()\n\n\tmap = (f) ->\n\t\t(xs) ->\n\t\t\tLazyList ->\n\t\t\t\titer = (if typeof xs is 'function' then xs else lazy(xs))[Symbol.iterator]()\n\t\t\t\tIterator ->\n\t\t\t\t\tif (x = iter()) isnt nil then f(x) else nil\n\n\tfilter = (ok) ->\n\t\t(xs) ->\n\t\t\tLazyList ->\n\t\t\t\titer = (if typeof xs is 'function' then xs else lazy(xs))[Symbol.iterator]()\n\t\t\t\tIterator ->\n\t\t\t\t\tnull while not ok(x = iter()) and x isnt nil\n\t\t\t\t\treturn x\n\n\tscanl = (f, r) ->\n\t\t(xs) ->\n\t\t\tLazyList ->\n\t\t\t\titer = (if typeof xs is 'function' then xs else lazy(xs))[Symbol.iterator]()\n\t\t\t\tIterator ->\n\t\t\t\t\tgot = r\n\t\t\t\t\tr = if (x = iter()) isnt nil then f(r, x) else nil\n\t\t\t\t\treturn got\n\n\tstreak = (n) ->\n\t\t(xs) ->\n\t\t\tLazyList ->\n\t\t\t\titer = (if typeof xs is 'function' then xs else lazy(xs))[Symbol.iterator]()\n\t\t\t\tbuf = []\n\t\t\t\tIterator ->\n\t\t\t\t\treturn nil if (x = iter()) is nil\n\t\t\t\t\tbuf.push(x)\n\t\t\t\t\tbuf.shift(1) if buf.length > n\n\t\t\t\t\treturn buf[...]\n\n\treverse = (xs) ->\n\t\tarr = if typeof xs is 'function' then list xs else copy xs\n\t\treturn lazy arr.reverse()\n\n\t# LazyList combiners: concat, zip, zipWith, cartProd,\n\n\tconcat = (xss...) ->\n\t\tLazyList ->\n\t\t\titer = (if xss[0][Symbol.iterator]? then xss[0] else lazy(xss[0]))[Symbol.iterator]()\n\t\t\tcurrent_index = 0\n\t\t\tIterator ->\n\t\t\t\tif (x = iter()) isnt nil\n\t\t\t\t\treturn x\n\t\t\t\telse if (++current_index < xss.length)\n\t\t\t\t\titer = (if xss[current_index][Symbol.iterator]? then xss[current_index] else lazy(xss[current_index]))[Symbol.iterator]()\n\t\t\t\t\treturn iter()\n\t\t\t\telse\n\t\t\t\t\treturn nil\n\n\t{zip, zipWith} = do ->\n\t\tfinished = (arr) ->\n\t\t\tfor x in arr\n\t\t\t\treturn true if x is nil\n\t\t\treturn false\n\n\t\tzip = (xss...) ->\n\t\t\tLazyList ->\n\t\t\t\titers = ((if typeof xs is 'function' then xs else lazy(xs))[Symbol.iterator]() for xs in xss)\n\t\t\t\tIterator ->\n\t\t\t\t\tnext = (iter() for iter in iters)\n\t\t\t\t\tif finished(next)\n\t\t\t\t\t\treturn nil\n\t\t\t\t\telse\n\t\t\t\t\t\treturn next\n\n\t\tzipWith = (f) -> (xss...) ->\n\t\t\tLazyList ->\n\t\t\t\titers = ((if typeof xs is 'function' then xs else lazy(xs))[Symbol.iterator]() for xs in xss)\n\t\t\t\tIterator ->\n\t\t\t\t\tnext = (iter() for iter in iters)\n\t\t\t\t\tif finished(next)\n\t\t\t\t\t\treturn nil\n\t\t\t\t\telse\n\t\t\t\t\t\treturn f(next...)\n\n\t\treturn {zip, zipWith}\n\n\tcartProd = do -> # cartesian product\n\t\tinc_vector = (limits) ->\n\t\t\tlen_minus_1 = limits.length - 1\n\t\t\t(vec) ->\n\t\t\t\ti = len_minus_1\n\t\t\t\tvec[i--] = 0 until ++vec[i] < limits[i] or i <= 0\n\t\t\t\treturn vec\n\n\t\tapply_vector = (space) ->\n\t\t\tlen = space.length\n\t\t\t(vec) ->\n\t\t\t\t(space[i][vec[i]] for i in [0...len])\n\n\t\t(xss...) ->\n\t\t\tLazyList ->\n\t\t\t\txss = (list(xs) for xs in xss)\n\t\t\t\tlimits = (xss[i].length for i in [0...xss.length])\n\t\t\t\t(return nil if len is 0) for len in limits\n\t\t\t\tinc = inc_vector(limits)\n\t\t\t\tget_value = apply_vector(xss)\n\t\t\t\tv = (0 for i in [0...xss.length])\n\t\t\t\tIterator ->\n\t\t\t\t\tif v[0] < limits[0] then (r = get_value v; inc v; r) else nil\n\n\t# LazyList consumers: list, last, length, foldl, best, all, any, foreach,\n\n\tlist = (xs) -> #force list elements of the LazyList to get an array\n\t\tif typeof xs is 'number'\n\t\t\tn = xs\n\t\t\t(xs) -> list take(n) xs\n\t\telse if typeof xs is 'function'\n\t\t\tit = xs[Symbol.iterator]()\n\t\t\t(x while (x = it()) isnt nil)\n\t\telse if xs[Symbol.iterator]?\n\t\t\tit = lazy(xs)[Symbol.iterator]()\n\t\t\t(x while (x = it()) isnt nil)\n\t\telse if xs instanceof Array\n\t\t\txs\n\t\telse\n\t\t\tthrow Error 'list(xs): xs is neither LazyList nor Array'\n\n\tlast = (xs) -> #returns nil if xs is empty\n\t\tif not xs[Symbol.iterator]? then xs[xs.length - 1] ? nil else\n\t\t\titer = (if typeof xs is 'function' then xs else lazy(xs))[Symbol.iterator]()\n\t\t\tr = nil\n\t\t\tr = x while (x = iter()) isnt nil\n\t\t\treturn r\n\n\tlength = (xs) ->\n\t\tif not xs[Symbol.iterator]? then xs.length else\n\t\t\titer = (if typeof xs is 'function' then xs else lazy(xs))[Symbol.iterator]()\n\t\t\tr = 0\n\t\t\t++r while (x = iter()) isnt nil\n\t\t\treturn r\n\n\tfoldl = (f, init) ->\n\t\t(xs) ->\n\t\t\tr = init\n\t\t\titer = (if typeof xs is 'function' then xs else lazy(xs))[Symbol.iterator]()\n\t\t\tr = f(r, x) while (x = iter()) isnt nil\n\t\t\treturn r\n\n\tbest = (better) ->\n\t\t(xs) ->\n\t\t\titer = (if typeof xs is 'function' then xs else lazy(xs))[Symbol.iterator]()\n\t\t\treturn null if (r = iter()) is nil\n\t\t\twhile (it = iter()) isnt nil\n\t\t\t\tr = if better(it, r) then it else r\n\t\t\treturn r\n\n\tall = (f) ->\n\t\tf = ((x) -> x is f) if typeof(f) isnt 'function'\n\t\t(xs) ->\n\t\t\titer = (if typeof xs is 'function' then xs else lazy(xs))[Symbol.iterator]()\n\t\t\twhile (x = iter()) isnt nil\n\t\t\t\treturn false if not f(x)\n\t\t\treturn true\n\n\tany = (f) ->\n\t\tall_not = all (x) -> not f(x)\n\t\t(xs) -> not (all_not xs)\n\n\tbrk = -> brk\n\tbrk.toString = -> 'foreach.break'\n\n\tforeach = (xs, callback, fruit) ->\n\t\titer = (if typeof xs is 'function' then xs else lazy(xs))[Symbol.iterator]()\n\t\twhile (x = iter()) isnt nil\n\t\t\tbreak if callback(x, fruit) is brk\n\t\tfruit\n\n\tObject.defineProperties foreach,\n\t\tbreak:\n\t\t\twritable: false\n\t\t\tconfigurable: false\n\t\t\tenumerable: false\n\t\t\tvalue: brk\n\n\treturn {\n\t\t# LazyList definition\n\t\tnil, LazyList, Iterator, Symbol,\n\n\t\t# LazyList constants\n\t\tnaturals, range, primes,\n\n\t\t# LazyList producers\n\t\tlazy, enumerate, repeat, iterate, random_gen, ranged_random_gen, permutation_gen,\n\n\t\t# LazyList decorators\n\t\tcons, map, filter, take, takeWhile, drop, dropWhile, scanl, streak, reverse,\n\n\t\t# LazyList combiners\n\t\tconcat, zip, zipWith, cartProd,\n\n\t\t# LazyList consumers\n\t\tlist, last, length, foldl, best, all, any, foreach,\n\t}\n\nmodule.exports = this_module\n\tSymbol: Symbol ? {iterator: 'iter'}\n"],"sourceRoot":"/source/"}