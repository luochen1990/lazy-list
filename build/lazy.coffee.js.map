{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","lazy.coffee","lazy.coffee.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length",1,"module","this_module","slice","all","any","best","brk","cartProd","concat","cons","drop","dropWhile","enumerate","filter","foldl","foreach","generate","iterator","last","lazy","lazylist","list","map","naturals","nil","permutation_gen","primes","random_gen","range","ranged_random_gen","ref","repeat","reverse","scanl","streak","take","takeWhile","zip","zipWith","xs","iter","toString","it","next","value","done","args","arguments","stop","start","step","x","p","Infinity","arr","Array","keys","Object","k","init","status","hash","Math","sin","floor","opts","seed","random","next_permutation","m","ref1","ls","json","c","ok","finished","j","prevx","got","buf","push","shift","copy","xss","current_index","len1","iters","results","apply","apply_vector","inc_vector","limits","len_minus_1","vec","space","len","get_value","inc","v","better","all_not","callback","fruit","defineProperties","break","writable","configurable","enumerable"],"mappings":"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","file":"lazy.coffee.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","this_module = () ->\n\n\t# LazyList definition: nil, lazylist, iterator,\n\n\tlazylist = (xs) -> # construct a lazylist from a function.\n\t\txs.iter = -> xs()\n\t\txs.toString = -> \"LazyList\"\n\t\treturn xs\n\n\tnil = lazylist -> nil # xs is empty <==> xs is nil or xs() is nil or xs()() is nil... <==> last xs is nil\n\tnil.toString = -> 'nil'\n\n\titerator = (it) -> # construct an iterator(which is a function with status) from a function.\n\t\tit.next = ->\n\t\t\tr = it()\n\t\t\t{value: r, done: r == nil}\n\t\tit.toString = -> \"Iterator\"\n\t\treturn it\n\n\t# lazylist constants: naturals, range, primes,\n\n\tnaturals =\n\t\tlazylist ->\n\t\t\ti = -1\n\t\t\titerator ->\n\t\t\t\t++i\n\n\trange = (args...) ->\n\t\tif args.length == 0\n\t\t\tnaturals\n\t\telse if args.length == 1\n\t\t\tlazylist ->\n\t\t\t\t[stop] = args\n\t\t\t\ti = -1\n\t\t\t\titerator ->\n\t\t\t\t\tif ++i < stop then i else nil\n\t\telse if args.length == 2\n\t\t\tlazylist ->\n\t\t\t\t[start, stop] = args\n\t\t\t\tif start < stop\n\t\t\t\t\ti = start - 1\n\t\t\t\t\titerator ->\n\t\t\t\t\t\tif ++i < stop then i else nil\n\t\t\t\telse\n\t\t\t\t\ti = start + 1\n\t\t\t\t\titerator ->\n\t\t\t\t\t\tif --i > stop then i else nil\n\t\telse\n\t\t\tlazylist ->\n\t\t\t\t[start, stop, step] = args\n\t\t\t\tthrow 'ERR IN range(): YOU ARE CREATING AN UNLIMITTED RANGE' if stop != start and (stop - start) * step < 0\n\t\t\t\ti = start - step\n\t\t\t\tif start < stop\n\t\t\t\t\titerator ->\n\t\t\t\t\t\tif (i += step) < stop then i else nil\n\t\t\t\telse\n\t\t\t\t\titerator ->\n\t\t\t\t\t\tif (i += step) > stop then i else nil\n\n\tprimes = lazylist -> do\n\t\tfilter((x) -> all((p) -> x % p != 0) takeWhile((p) -> p * p <= x) range(2, Infinity)) range(2, Infinity)\n\n\t# lazylist producers: lazy, enumerate, generate, random_gen, ranged_random_gen, permutation_gen,\n\n\tlazy = (arr) -> #make a lazylist from array or function\n\t\tif typeof arr is 'function'\n\t\t\tlazylist arr\n\t\telse #maybe Array or String\n\t\t\tlazylist ->\n\t\t\t\ti = -1\n\t\t\t\titerator ->\n\t\t\t\t\ti += 1\n\t\t\t\t\tif i < arr.length\n\t\t\t\t\t\tarr[i]\n\t\t\t\t\telse\n\t\t\t\t\t\tnil\n\n\tenumerate = (it) -> # iterator with index(with key for object)\n\t\tif it.iter? or it instanceof Array\n\t\t\tzip(naturals, it)\n\t\telse\n\t\t\tlazylist ->\n\t\t\t\tkeys = Object.keys(it)\n\t\t\t\ti = -1\n\t\t\t\titerator ->\n\t\t\t\t\tif ++i < keys.length then [(k = keys[i]), it[k]] else nil\n\n\trepeat = (it) -> # repeat it\n\t\tlazylist ->\n\t\t\titerator ->\n\t\t\t\tit\n\n\tgenerate = (init, next) -> #function next should not change it's argument\n\t\tlazylist ->\n\t\t\tstatus = init\n\t\t\titerator ->\n\t\t\t\tlast = status\n\t\t\t\tstatus = next status\n\t\t\t\treturn last\n\n\trandom_gen = do ->\n\t\thash = (x) ->\n\t\t\tx = Math.sin(x) * 1e4\n\t\t\tx - Math.floor(x)\n\t\t(opts) ->\n\t\t\tseed = opts?.seed ? Math.random()\n\t\t\tgenerate seed, hash\n\n\tranged_random_gen = (range, opts) ->\n\t\tseed = opts?.seed ? Math.random()\n\t\tmap((x) -> Math.floor(x * range)) random_gen(seed: seed)\n\n\tpermutation_gen = do ->\n\t\tnext_permutation = (x) ->\n\t\t\tx = x[...]\n\t\t\tl = x.length - 1\n\t\t\t--l while l >= 1 and x[l] <= x[l - 1]\n\n\t\t\tif (l != 0)\n\t\t\t\tm = x.length - 1\n\t\t\t\t--m while m > l - 1 and x[m] <= x[l - 1]\n\t\t\t\t[x[m], x[l - 1]] = [x[l - 1], x[m]]\n\n\t\t\tr = x.length - 1\n\t\t\twhile(l < r)\n\t\t\t\t[x[l], x[r]] = [x[r], x[l]]\n\t\t\t\t++l\n\t\t\t\t--r\n\t\t\treturn x\n\n\t\t(arr) ->\n\t\t\tif arr.length == 0 then nil else\n\t\t\t\tconcat [arr[...]], takeWhile((ls) -> json(ls) != json(arr)) drop(1) generate arr, next_permutation\n\n\t# lazylist decorators: take, takeWhile, drop, dropWhile, cons, map, filter, scanl, streak, reverse,\n\n\ttake = (n) ->\n\t\t(xs) ->\n\t\t\tlazylist ->\n\t\t\t\titer = (if xs.iter? then xs else lazy(xs)).iter()\n\t\t\t\tc = -1\n\t\t\t\titerator ->\n\t\t\t\t\tif ++c < n then iter() else nil\n\n\ttakeWhile = (ok) ->\n\t\t(xs) ->\n\t\t\tlazylist ->\n\t\t\t\titer = (if xs.iter? then xs else lazy(xs)).iter()\n\t\t\t\titerator ->\n\t\t\t\t\tif (x = iter()) isnt nil and ok(x) then x else nil\n\n\tdrop = (n) ->\n\t\t(xs) ->\n\t\t\tlazylist ->\n\t\t\t\titer = (if xs.iter? then xs else lazy(xs)).iter()\n\t\t\t\tfinished = false\n\t\t\t\t(finished or= (iter() is nil); break if finished) for i in [0...n]\n\t\t\t\tif finished then (-> nil) else iter\n\n\tdropWhile = (ok) ->\n\t\t(xs) ->\n\t\t\tlazylist ->\n\t\t\t\titer = (if xs.iter? then xs else lazy(xs)).iter()\n\t\t\t\tnull while ok(x = iter()) and x isnt nil\n\t\t\t\titerator ->\n\t\t\t\t\t[prevx, x] = [x, iter()]\n\t\t\t\t\treturn prevx\n\n\tcons = (x) ->\n\t\t(xs) ->\n\t\t\tlazylist ->\n\t\t\t\titer = null\n\t\t\t\titerator ->\n\t\t\t\t\tif iter is null\n\t\t\t\t\t\titer = (if xs.iter? then xs else lazy(xs)).iter()\n\t\t\t\t\t\treturn x\n\t\t\t\t\telse\n\t\t\t\t\t\treturn iter()\n\n\tmap = (f) ->\n\t\t(xs) ->\n\t\t\tlazylist ->\n\t\t\t\titer = (if xs.iter? then xs else lazy(xs)).iter()\n\t\t\t\titerator ->\n\t\t\t\t\tif (x = iter()) isnt nil then f(x) else nil\n\n\tfilter = (ok) ->\n\t\t(xs) ->\n\t\t\tlazylist ->\n\t\t\t\titer = (if xs.iter? then xs else lazy(xs)).iter()\n\t\t\t\titerator ->\n\t\t\t\t\tnull while not ok(x = iter()) and x isnt nil\n\t\t\t\t\treturn x\n\n\tscanl = (f, r) ->\n\t\t(xs) ->\n\t\t\tlazylist ->\n\t\t\t\titer = (if xs.iter? then xs else lazy(xs)).iter()\n\t\t\t\titerator ->\n\t\t\t\t\tgot = r\n\t\t\t\t\tr = if (x = iter()) isnt nil then f(r, x) else nil\n\t\t\t\t\treturn got\n\n\tstreak = (n) ->\n\t\t(xs) ->\n\t\t\tlazylist ->\n\t\t\t\titer = (if xs.iter? then xs else lazy(xs)).iter()\n\t\t\t\tbuf = []\n\t\t\t\titerator ->\n\t\t\t\t\treturn nil if (x = iter()) is nil\n\t\t\t\t\tbuf.push(x)\n\t\t\t\t\tbuf.shift(1) if buf.length > n\n\t\t\t\t\treturn buf[...]\n\n\treverse = (xs) ->\n\t\tarr = if xs.iter? then list xs else copy xs\n\t\treturn lazy arr.reverse()\n\n\t# lazylist combiners: concat, zip, zipWith, cartProd,\n\n\tconcat = (xss...) ->\n\t\tlazylist ->\n\t\t\titer = (if xss[0].iter? then xss[0] else lazy(xss[0])).iter()\n\t\t\tcurrent_index = 0\n\t\t\titerator ->\n\t\t\t\tif (x = iter()) isnt nil\n\t\t\t\t\treturn x\n\t\t\t\telse if (++current_index < xss.length)\n\t\t\t\t\titer = (if xss[current_index].iter? then xss[current_index] else lazy(xss[current_index])).iter()\n\t\t\t\t\treturn iter()\n\t\t\t\telse\n\t\t\t\t\treturn nil\n\n\t{zip, zipWith} = do ->\n\t\tfinished = (arr) ->\n\t\t\tfor x in arr\n\t\t\t\treturn true if x is nil\n\t\t\treturn false\n\n\t\tzip = (xss...) ->\n\t\t\tlazylist ->\n\t\t\t\titers = ((if xs.iter? then xs else lazy(xs)).iter() for xs in xss)\n\t\t\t\titerator ->\n\t\t\t\t\tnext = (iter() for iter in iters)\n\t\t\t\t\tif finished(next)\n\t\t\t\t\t\treturn nil\n\t\t\t\t\telse\n\t\t\t\t\t\treturn next\n\n\t\tzipWith = (f) -> (xss...) ->\n\t\t\tlazylist ->\n\t\t\t\titers = ((if xs.iter? then xs else lazy(xs)).iter() for xs in xss)\n\t\t\t\titerator ->\n\t\t\t\t\tnext = (iter() for iter in iters)\n\t\t\t\t\tif finished(next)\n\t\t\t\t\t\treturn nil\n\t\t\t\t\telse\n\t\t\t\t\t\treturn f(next...)\n\n\t\treturn {zip, zipWith}\n\n\tcartProd = do -> # cartesian product\n\t\tinc_vector = (limits) ->\n\t\t\tlen_minus_1 = limits.length - 1\n\t\t\t(vec) ->\n\t\t\t\ti = len_minus_1\n\t\t\t\tvec[i--] = 0 until ++vec[i] < limits[i] or i <= 0\n\t\t\t\treturn vec\n\n\t\tapply_vector = (space) ->\n\t\t\tlen = space.length\n\t\t\t(vec) ->\n\t\t\t\t(space[i][vec[i]] for i in [0...len])\n\n\t\t(xss...) ->\n\t\t\tlazylist ->\n\t\t\t\txss = (list(xs) for xs in xss)\n\t\t\t\tlimits = (xss[i].length for i in [0...xss.length])\n\t\t\t\t(return nil if len is 0) for len in limits\n\t\t\t\tinc = inc_vector(limits)\n\t\t\t\tget_value = apply_vector(xss)\n\t\t\t\tv = (0 for i in [0...xss.length])\n\t\t\t\titerator ->\n\t\t\t\t\tif v[0] < limits[0] then (r = get_value v; inc v; r) else nil\n\n\t# lazylist consumers: list, last, length, foldl, best, all, any, foreach,\n\n\tlist = (xs) -> #force list elements of the lazylist to get an array\n\t\tif xs.iter?\n\t\t\tit = xs.iter()\n\t\t\t(x while (x = it()) isnt nil)\n\t\telse if xs instanceof Array\n\t\t\txs\n\t\telse\n\t\t\tthrow Error 'list(xs): xs is neither LazyList nor Array'\n\n\tlast = (xs) -> #returns nil if xs is empty\n\t\tif not xs.iter? then xs[xs.length - 1] ? nil else\n\t\t\titer = (if xs.iter? then xs else lazy(xs)).iter()\n\t\t\tr = nil\n\t\t\tr = x while (x = iter()) isnt nil\n\t\t\treturn r\n\n\tlength = (xs) ->\n\t\tif not xs.iter? then xs.length else\n\t\t\titer = (if xs.iter? then xs else lazy(xs)).iter()\n\t\t\tr = 0\n\t\t\t++r while (x = iter()) isnt nil\n\t\t\treturn r\n\n\tfoldl = (f, r) ->\n\t\t(xs) ->\n\t\t\titer = (if xs.iter? then xs else lazy(xs)).iter()\n\t\t\tr = f(r, x) while (x = iter()) isnt nil\n\t\t\treturn r\n\n\tbest = (better) ->\n\t\t(xs) ->\n\t\t\titer = (if xs.iter? then xs else lazy(xs)).iter()\n\t\t\treturn null if (r = iter()) is nil\n\t\t\twhile (it = iter()) isnt nil\n\t\t\t\tr = if better(it, r) then it else r\n\t\t\treturn r\n\n\tall = (f) ->\n\t\tf = ((x) -> x is f) if typeof(f) isnt 'function'\n\t\t(xs) ->\n\t\t\titer = (if xs.iter? then xs else lazy(xs)).iter()\n\t\t\twhile (x = iter()) isnt nil\n\t\t\t\treturn false if not f(x)\n\t\t\treturn true\n\n\tany = (f) ->\n\t\tall_not = all (x) -> not f(x)\n\t\t(xs) -> not (all_not xs)\n\n\tbrk = -> brk\n\tbrk.toString = -> 'foreach.break'\n\n\tforeach = (xs, callback, fruit) ->\n\t\titer = (if xs.iter? then xs else lazy(xs)).iter()\n\t\twhile (x = iter()) isnt nil\n\t\t\tbreak if callback(x, fruit) is brk\n\t\tfruit\n\n\tObject.defineProperties foreach,\n\t\tbreak:\n\t\t\twritable: false\n\t\t\tconfigurable: false\n\t\t\tenumerable: false\n\t\t\tvalue: brk\n\n\treturn {\n\t\t# lazylist definition\n\t\tnil, lazylist, iterator,\n\n\t\t# lazylist constants\n\t\tnaturals, range, primes,\n\n\t\t# lazylist producers\n\t\tlazy, enumerate, repeat, generate, random_gen, ranged_random_gen, permutation_gen,\n\n\t\t# lazylist decorators\n\t\tcons, map, filter, take, takeWhile, drop, dropWhile, scanl, streak, reverse,\n\n\t\t# lazylist combiners\n\t\tconcat, zip, zipWith, cartProd,\n\n\t\t# lazylist consumers\n\t\tlist, last, length, foldl, best, all, any, foreach,\n\t}\n\nmodule.exports = this_module()\n\n",null],"sourceRoot":"/source/"}